// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zetasql/local_service/local_service.proto

package zetasql_local_service

import (
	context "context"
	fmt "fmt"
	functionpb "github.com/apstndb/go-zetasql-genproto/zetasql/proto/functionpb"
	optionspb "github.com/apstndb/go-zetasql-genproto/zetasql/proto/optionspb"
	simplecatalogpb "github.com/apstndb/go-zetasql-genproto/zetasql/proto/simplecatalogpb"
	optionspb1 "github.com/apstndb/go-zetasql-genproto/zetasql/public/optionspb"
	parse_resume_locationpb "github.com/apstndb/go-zetasql-genproto/zetasql/public/parse_resume_locationpb"
	simple_tablepb "github.com/apstndb/go-zetasql-genproto/zetasql/public/simple_tablepb"
	typepb "github.com/apstndb/go-zetasql-genproto/zetasql/public/typepb"
	valuepb "github.com/apstndb/go-zetasql-genproto/zetasql/public/valuepb"
	resolved_astpb "github.com/apstndb/go-zetasql-genproto/zetasql/resolved_ast/resolved_astpb"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PrepareRequest struct {
	Sql                  *string                             `protobuf:"bytes,1,opt,name=sql" json:"sql,omitempty"`
	Options              *optionspb.AnalyzerOptionsProto     `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
	FileDescriptorSet    []*descriptor.FileDescriptorSet     `protobuf:"bytes,3,rep,name=file_descriptor_set,json=fileDescriptorSet" json:"file_descriptor_set,omitempty"`
	SimpleCatalog        *simplecatalogpb.SimpleCatalogProto `protobuf:"bytes,4,opt,name=simple_catalog,json=simpleCatalog" json:"simple_catalog,omitempty"`
	RegisteredCatalogId  *int64                              `protobuf:"varint,5,opt,name=registered_catalog_id,json=registeredCatalogId" json:"registered_catalog_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *PrepareRequest) Reset()         { *m = PrepareRequest{} }
func (m *PrepareRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareRequest) ProtoMessage()    {}
func (*PrepareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{0}
}

func (m *PrepareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareRequest.Unmarshal(m, b)
}
func (m *PrepareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareRequest.Marshal(b, m, deterministic)
}
func (m *PrepareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareRequest.Merge(m, src)
}
func (m *PrepareRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareRequest.Size(m)
}
func (m *PrepareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareRequest proto.InternalMessageInfo

func (m *PrepareRequest) GetSql() string {
	if m != nil && m.Sql != nil {
		return *m.Sql
	}
	return ""
}

func (m *PrepareRequest) GetOptions() *optionspb.AnalyzerOptionsProto {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *PrepareRequest) GetFileDescriptorSet() []*descriptor.FileDescriptorSet {
	if m != nil {
		return m.FileDescriptorSet
	}
	return nil
}

func (m *PrepareRequest) GetSimpleCatalog() *simplecatalogpb.SimpleCatalogProto {
	if m != nil {
		return m.SimpleCatalog
	}
	return nil
}

func (m *PrepareRequest) GetRegisteredCatalogId() int64 {
	if m != nil && m.RegisteredCatalogId != nil {
		return *m.RegisteredCatalogId
	}
	return 0
}

type PreparedState struct {
	PreparedExpressionId     *int64            `protobuf:"varint,1,opt,name=prepared_expression_id,json=preparedExpressionId" json:"prepared_expression_id,omitempty"`
	OutputType               *typepb.TypeProto `protobuf:"bytes,2,opt,name=output_type,json=outputType" json:"output_type,omitempty"`
	ReferencedColumns        []string          `protobuf:"bytes,3,rep,name=referenced_columns,json=referencedColumns" json:"referenced_columns,omitempty"`
	ReferencedParameters     []string          `protobuf:"bytes,4,rep,name=referenced_parameters,json=referencedParameters" json:"referenced_parameters,omitempty"`
	PositionalParameterCount *int64            `protobuf:"varint,5,opt,name=positional_parameter_count,json=positionalParameterCount" json:"positional_parameter_count,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}          `json:"-"`
	XXX_unrecognized         []byte            `json:"-"`
	XXX_sizecache            int32             `json:"-"`
}

func (m *PreparedState) Reset()         { *m = PreparedState{} }
func (m *PreparedState) String() string { return proto.CompactTextString(m) }
func (*PreparedState) ProtoMessage()    {}
func (*PreparedState) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{1}
}

func (m *PreparedState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreparedState.Unmarshal(m, b)
}
func (m *PreparedState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreparedState.Marshal(b, m, deterministic)
}
func (m *PreparedState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreparedState.Merge(m, src)
}
func (m *PreparedState) XXX_Size() int {
	return xxx_messageInfo_PreparedState.Size(m)
}
func (m *PreparedState) XXX_DiscardUnknown() {
	xxx_messageInfo_PreparedState.DiscardUnknown(m)
}

var xxx_messageInfo_PreparedState proto.InternalMessageInfo

func (m *PreparedState) GetPreparedExpressionId() int64 {
	if m != nil && m.PreparedExpressionId != nil {
		return *m.PreparedExpressionId
	}
	return 0
}

func (m *PreparedState) GetOutputType() *typepb.TypeProto {
	if m != nil {
		return m.OutputType
	}
	return nil
}

func (m *PreparedState) GetReferencedColumns() []string {
	if m != nil {
		return m.ReferencedColumns
	}
	return nil
}

func (m *PreparedState) GetReferencedParameters() []string {
	if m != nil {
		return m.ReferencedParameters
	}
	return nil
}

func (m *PreparedState) GetPositionalParameterCount() int64 {
	if m != nil && m.PositionalParameterCount != nil {
		return *m.PositionalParameterCount
	}
	return 0
}

type PrepareResponse struct {
	PreparedExpressionId *int64            `protobuf:"varint,1,opt,name=prepared_expression_id,json=preparedExpressionId" json:"prepared_expression_id,omitempty"`
	OutputType           *typepb.TypeProto `protobuf:"bytes,2,opt,name=output_type,json=outputType" json:"output_type,omitempty"`
	Prepared             *PreparedState    `protobuf:"bytes,3,opt,name=prepared" json:"prepared,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PrepareResponse) Reset()         { *m = PrepareResponse{} }
func (m *PrepareResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareResponse) ProtoMessage()    {}
func (*PrepareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{2}
}

func (m *PrepareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareResponse.Unmarshal(m, b)
}
func (m *PrepareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareResponse.Marshal(b, m, deterministic)
}
func (m *PrepareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareResponse.Merge(m, src)
}
func (m *PrepareResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareResponse.Size(m)
}
func (m *PrepareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareResponse proto.InternalMessageInfo

func (m *PrepareResponse) GetPreparedExpressionId() int64 {
	if m != nil && m.PreparedExpressionId != nil {
		return *m.PreparedExpressionId
	}
	return 0
}

func (m *PrepareResponse) GetOutputType() *typepb.TypeProto {
	if m != nil {
		return m.OutputType
	}
	return nil
}

func (m *PrepareResponse) GetPrepared() *PreparedState {
	if m != nil {
		return m.Prepared
	}
	return nil
}

type EvaluateRequest struct {
	Sql                  *string                         `protobuf:"bytes,1,opt,name=sql" json:"sql,omitempty"`
	Columns              []*EvaluateRequest_Parameter    `protobuf:"bytes,2,rep,name=columns" json:"columns,omitempty"`
	Params               []*EvaluateRequest_Parameter    `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	FileDescriptorSet    []*descriptor.FileDescriptorSet `protobuf:"bytes,4,rep,name=file_descriptor_set,json=fileDescriptorSet" json:"file_descriptor_set,omitempty"`
	PreparedExpressionId *int64                          `protobuf:"varint,5,opt,name=prepared_expression_id,json=preparedExpressionId" json:"prepared_expression_id,omitempty"`
	Options              *optionspb.AnalyzerOptionsProto `protobuf:"bytes,6,opt,name=options" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *EvaluateRequest) Reset()         { *m = EvaluateRequest{} }
func (m *EvaluateRequest) String() string { return proto.CompactTextString(m) }
func (*EvaluateRequest) ProtoMessage()    {}
func (*EvaluateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{3}
}

func (m *EvaluateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateRequest.Unmarshal(m, b)
}
func (m *EvaluateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateRequest.Marshal(b, m, deterministic)
}
func (m *EvaluateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateRequest.Merge(m, src)
}
func (m *EvaluateRequest) XXX_Size() int {
	return xxx_messageInfo_EvaluateRequest.Size(m)
}
func (m *EvaluateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateRequest proto.InternalMessageInfo

func (m *EvaluateRequest) GetSql() string {
	if m != nil && m.Sql != nil {
		return *m.Sql
	}
	return ""
}

func (m *EvaluateRequest) GetColumns() []*EvaluateRequest_Parameter {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *EvaluateRequest) GetParams() []*EvaluateRequest_Parameter {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *EvaluateRequest) GetFileDescriptorSet() []*descriptor.FileDescriptorSet {
	if m != nil {
		return m.FileDescriptorSet
	}
	return nil
}

func (m *EvaluateRequest) GetPreparedExpressionId() int64 {
	if m != nil && m.PreparedExpressionId != nil {
		return *m.PreparedExpressionId
	}
	return 0
}

func (m *EvaluateRequest) GetOptions() *optionspb.AnalyzerOptionsProto {
	if m != nil {
		return m.Options
	}
	return nil
}

type EvaluateRequest_Parameter struct {
	Name                 *string             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                *valuepb.ValueProto `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EvaluateRequest_Parameter) Reset()         { *m = EvaluateRequest_Parameter{} }
func (m *EvaluateRequest_Parameter) String() string { return proto.CompactTextString(m) }
func (*EvaluateRequest_Parameter) ProtoMessage()    {}
func (*EvaluateRequest_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{3, 0}
}

func (m *EvaluateRequest_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateRequest_Parameter.Unmarshal(m, b)
}
func (m *EvaluateRequest_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateRequest_Parameter.Marshal(b, m, deterministic)
}
func (m *EvaluateRequest_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateRequest_Parameter.Merge(m, src)
}
func (m *EvaluateRequest_Parameter) XXX_Size() int {
	return xxx_messageInfo_EvaluateRequest_Parameter.Size(m)
}
func (m *EvaluateRequest_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateRequest_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateRequest_Parameter proto.InternalMessageInfo

func (m *EvaluateRequest_Parameter) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *EvaluateRequest_Parameter) GetValue() *valuepb.ValueProto {
	if m != nil {
		return m.Value
	}
	return nil
}

type EvaluateResponse struct {
	Value                *valuepb.ValueProto `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Type                 *typepb.TypeProto   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	PreparedExpressionId *int64              `protobuf:"varint,3,opt,name=prepared_expression_id,json=preparedExpressionId" json:"prepared_expression_id,omitempty"`
	Prepared             *PreparedState      `protobuf:"bytes,4,opt,name=prepared" json:"prepared,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EvaluateResponse) Reset()         { *m = EvaluateResponse{} }
func (m *EvaluateResponse) String() string { return proto.CompactTextString(m) }
func (*EvaluateResponse) ProtoMessage()    {}
func (*EvaluateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{4}
}

func (m *EvaluateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateResponse.Unmarshal(m, b)
}
func (m *EvaluateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateResponse.Marshal(b, m, deterministic)
}
func (m *EvaluateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateResponse.Merge(m, src)
}
func (m *EvaluateResponse) XXX_Size() int {
	return xxx_messageInfo_EvaluateResponse.Size(m)
}
func (m *EvaluateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateResponse proto.InternalMessageInfo

func (m *EvaluateResponse) GetValue() *valuepb.ValueProto {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *EvaluateResponse) GetType() *typepb.TypeProto {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *EvaluateResponse) GetPreparedExpressionId() int64 {
	if m != nil && m.PreparedExpressionId != nil {
		return *m.PreparedExpressionId
	}
	return 0
}

func (m *EvaluateResponse) GetPrepared() *PreparedState {
	if m != nil {
		return m.Prepared
	}
	return nil
}

type EvaluateRequestBatch struct {
	Request              []*EvaluateRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EvaluateRequestBatch) Reset()         { *m = EvaluateRequestBatch{} }
func (m *EvaluateRequestBatch) String() string { return proto.CompactTextString(m) }
func (*EvaluateRequestBatch) ProtoMessage()    {}
func (*EvaluateRequestBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{5}
}

func (m *EvaluateRequestBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateRequestBatch.Unmarshal(m, b)
}
func (m *EvaluateRequestBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateRequestBatch.Marshal(b, m, deterministic)
}
func (m *EvaluateRequestBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateRequestBatch.Merge(m, src)
}
func (m *EvaluateRequestBatch) XXX_Size() int {
	return xxx_messageInfo_EvaluateRequestBatch.Size(m)
}
func (m *EvaluateRequestBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateRequestBatch.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateRequestBatch proto.InternalMessageInfo

func (m *EvaluateRequestBatch) GetRequest() []*EvaluateRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type EvaluateResponseBatch struct {
	Response             []*EvaluateResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *EvaluateResponseBatch) Reset()         { *m = EvaluateResponseBatch{} }
func (m *EvaluateResponseBatch) String() string { return proto.CompactTextString(m) }
func (*EvaluateResponseBatch) ProtoMessage()    {}
func (*EvaluateResponseBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{6}
}

func (m *EvaluateResponseBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateResponseBatch.Unmarshal(m, b)
}
func (m *EvaluateResponseBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateResponseBatch.Marshal(b, m, deterministic)
}
func (m *EvaluateResponseBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateResponseBatch.Merge(m, src)
}
func (m *EvaluateResponseBatch) XXX_Size() int {
	return xxx_messageInfo_EvaluateResponseBatch.Size(m)
}
func (m *EvaluateResponseBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateResponseBatch.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateResponseBatch proto.InternalMessageInfo

func (m *EvaluateResponseBatch) GetResponse() []*EvaluateResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type UnprepareRequest struct {
	PreparedExpressionId *int64   `protobuf:"varint,1,opt,name=prepared_expression_id,json=preparedExpressionId" json:"prepared_expression_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnprepareRequest) Reset()         { *m = UnprepareRequest{} }
func (m *UnprepareRequest) String() string { return proto.CompactTextString(m) }
func (*UnprepareRequest) ProtoMessage()    {}
func (*UnprepareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{7}
}

func (m *UnprepareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnprepareRequest.Unmarshal(m, b)
}
func (m *UnprepareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnprepareRequest.Marshal(b, m, deterministic)
}
func (m *UnprepareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnprepareRequest.Merge(m, src)
}
func (m *UnprepareRequest) XXX_Size() int {
	return xxx_messageInfo_UnprepareRequest.Size(m)
}
func (m *UnprepareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnprepareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnprepareRequest proto.InternalMessageInfo

func (m *UnprepareRequest) GetPreparedExpressionId() int64 {
	if m != nil && m.PreparedExpressionId != nil {
		return *m.PreparedExpressionId
	}
	return 0
}

type TableFromProtoRequest struct {
	Proto                *typepb.ProtoTypeProto        `protobuf:"bytes,1,opt,name=proto" json:"proto,omitempty"`
	FileDescriptorSet    *descriptor.FileDescriptorSet `protobuf:"bytes,2,opt,name=file_descriptor_set,json=fileDescriptorSet" json:"file_descriptor_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TableFromProtoRequest) Reset()         { *m = TableFromProtoRequest{} }
func (m *TableFromProtoRequest) String() string { return proto.CompactTextString(m) }
func (*TableFromProtoRequest) ProtoMessage()    {}
func (*TableFromProtoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{8}
}

func (m *TableFromProtoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableFromProtoRequest.Unmarshal(m, b)
}
func (m *TableFromProtoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableFromProtoRequest.Marshal(b, m, deterministic)
}
func (m *TableFromProtoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableFromProtoRequest.Merge(m, src)
}
func (m *TableFromProtoRequest) XXX_Size() int {
	return xxx_messageInfo_TableFromProtoRequest.Size(m)
}
func (m *TableFromProtoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TableFromProtoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TableFromProtoRequest proto.InternalMessageInfo

func (m *TableFromProtoRequest) GetProto() *typepb.ProtoTypeProto {
	if m != nil {
		return m.Proto
	}
	return nil
}

func (m *TableFromProtoRequest) GetFileDescriptorSet() *descriptor.FileDescriptorSet {
	if m != nil {
		return m.FileDescriptorSet
	}
	return nil
}

type RegisteredParseResumeLocationProto struct {
	RegisteredId         *int64   `protobuf:"varint,1,opt,name=registered_id,json=registeredId" json:"registered_id,omitempty"`
	BytePosition         *int32   `protobuf:"varint,2,opt,name=byte_position,json=bytePosition" json:"byte_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisteredParseResumeLocationProto) Reset()         { *m = RegisteredParseResumeLocationProto{} }
func (m *RegisteredParseResumeLocationProto) String() string { return proto.CompactTextString(m) }
func (*RegisteredParseResumeLocationProto) ProtoMessage()    {}
func (*RegisteredParseResumeLocationProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{9}
}

func (m *RegisteredParseResumeLocationProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisteredParseResumeLocationProto.Unmarshal(m, b)
}
func (m *RegisteredParseResumeLocationProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisteredParseResumeLocationProto.Marshal(b, m, deterministic)
}
func (m *RegisteredParseResumeLocationProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisteredParseResumeLocationProto.Merge(m, src)
}
func (m *RegisteredParseResumeLocationProto) XXX_Size() int {
	return xxx_messageInfo_RegisteredParseResumeLocationProto.Size(m)
}
func (m *RegisteredParseResumeLocationProto) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisteredParseResumeLocationProto.DiscardUnknown(m)
}

var xxx_messageInfo_RegisteredParseResumeLocationProto proto.InternalMessageInfo

func (m *RegisteredParseResumeLocationProto) GetRegisteredId() int64 {
	if m != nil && m.RegisteredId != nil {
		return *m.RegisteredId
	}
	return 0
}

func (m *RegisteredParseResumeLocationProto) GetBytePosition() int32 {
	if m != nil && m.BytePosition != nil {
		return *m.BytePosition
	}
	return 0
}

type AnalyzeRequest struct {
	Options             *optionspb.AnalyzerOptionsProto     `protobuf:"bytes,1,opt,name=options" json:"options,omitempty"`
	SimpleCatalog       *simplecatalogpb.SimpleCatalogProto `protobuf:"bytes,2,opt,name=simple_catalog,json=simpleCatalog" json:"simple_catalog,omitempty"`
	FileDescriptorSet   []*descriptor.FileDescriptorSet     `protobuf:"bytes,3,rep,name=file_descriptor_set,json=fileDescriptorSet" json:"file_descriptor_set,omitempty"`
	RegisteredCatalogId *int64                              `protobuf:"varint,4,opt,name=registered_catalog_id,json=registeredCatalogId" json:"registered_catalog_id,omitempty"`
	// Types that are valid to be assigned to Target:
	//	*AnalyzeRequest_SqlStatement
	//	*AnalyzeRequest_ParseResumeLocation
	//	*AnalyzeRequest_RegisteredParseResumeLocation
	//	*AnalyzeRequest_SqlExpression
	Target               isAnalyzeRequest_Target `protobuf_oneof:"target"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AnalyzeRequest) Reset()         { *m = AnalyzeRequest{} }
func (m *AnalyzeRequest) String() string { return proto.CompactTextString(m) }
func (*AnalyzeRequest) ProtoMessage()    {}
func (*AnalyzeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{10}
}

func (m *AnalyzeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeRequest.Unmarshal(m, b)
}
func (m *AnalyzeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeRequest.Marshal(b, m, deterministic)
}
func (m *AnalyzeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeRequest.Merge(m, src)
}
func (m *AnalyzeRequest) XXX_Size() int {
	return xxx_messageInfo_AnalyzeRequest.Size(m)
}
func (m *AnalyzeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeRequest proto.InternalMessageInfo

func (m *AnalyzeRequest) GetOptions() *optionspb.AnalyzerOptionsProto {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *AnalyzeRequest) GetSimpleCatalog() *simplecatalogpb.SimpleCatalogProto {
	if m != nil {
		return m.SimpleCatalog
	}
	return nil
}

func (m *AnalyzeRequest) GetFileDescriptorSet() []*descriptor.FileDescriptorSet {
	if m != nil {
		return m.FileDescriptorSet
	}
	return nil
}

func (m *AnalyzeRequest) GetRegisteredCatalogId() int64 {
	if m != nil && m.RegisteredCatalogId != nil {
		return *m.RegisteredCatalogId
	}
	return 0
}

type isAnalyzeRequest_Target interface {
	isAnalyzeRequest_Target()
}

type AnalyzeRequest_SqlStatement struct {
	SqlStatement string `protobuf:"bytes,5,opt,name=sql_statement,json=sqlStatement,oneof"`
}

type AnalyzeRequest_ParseResumeLocation struct {
	ParseResumeLocation *parse_resume_locationpb.ParseResumeLocationProto `protobuf:"bytes,6,opt,name=parse_resume_location,json=parseResumeLocation,oneof"`
}

type AnalyzeRequest_RegisteredParseResumeLocation struct {
	RegisteredParseResumeLocation *RegisteredParseResumeLocationProto `protobuf:"bytes,7,opt,name=registered_parse_resume_location,json=registeredParseResumeLocation,oneof"`
}

type AnalyzeRequest_SqlExpression struct {
	SqlExpression string `protobuf:"bytes,8,opt,name=sql_expression,json=sqlExpression,oneof"`
}

func (*AnalyzeRequest_SqlStatement) isAnalyzeRequest_Target() {}

func (*AnalyzeRequest_ParseResumeLocation) isAnalyzeRequest_Target() {}

func (*AnalyzeRequest_RegisteredParseResumeLocation) isAnalyzeRequest_Target() {}

func (*AnalyzeRequest_SqlExpression) isAnalyzeRequest_Target() {}

func (m *AnalyzeRequest) GetTarget() isAnalyzeRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *AnalyzeRequest) GetSqlStatement() string {
	if x, ok := m.GetTarget().(*AnalyzeRequest_SqlStatement); ok {
		return x.SqlStatement
	}
	return ""
}

func (m *AnalyzeRequest) GetParseResumeLocation() *parse_resume_locationpb.ParseResumeLocationProto {
	if x, ok := m.GetTarget().(*AnalyzeRequest_ParseResumeLocation); ok {
		return x.ParseResumeLocation
	}
	return nil
}

func (m *AnalyzeRequest) GetRegisteredParseResumeLocation() *RegisteredParseResumeLocationProto {
	if x, ok := m.GetTarget().(*AnalyzeRequest_RegisteredParseResumeLocation); ok {
		return x.RegisteredParseResumeLocation
	}
	return nil
}

func (m *AnalyzeRequest) GetSqlExpression() string {
	if x, ok := m.GetTarget().(*AnalyzeRequest_SqlExpression); ok {
		return x.SqlExpression
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AnalyzeRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AnalyzeRequest_SqlStatement)(nil),
		(*AnalyzeRequest_ParseResumeLocation)(nil),
		(*AnalyzeRequest_RegisteredParseResumeLocation)(nil),
		(*AnalyzeRequest_SqlExpression)(nil),
	}
}

type AnalyzeResponse struct {
	// Types that are valid to be assigned to Result:
	//	*AnalyzeResponse_ResolvedStatement
	//	*AnalyzeResponse_ResolvedExpression
	Result               isAnalyzeResponse_Result `protobuf_oneof:"result"`
	ResumeBytePosition   *int32                   `protobuf:"varint,2,opt,name=resume_byte_position,json=resumeBytePosition" json:"resume_byte_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AnalyzeResponse) Reset()         { *m = AnalyzeResponse{} }
func (m *AnalyzeResponse) String() string { return proto.CompactTextString(m) }
func (*AnalyzeResponse) ProtoMessage()    {}
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{11}
}

func (m *AnalyzeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeResponse.Unmarshal(m, b)
}
func (m *AnalyzeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeResponse.Marshal(b, m, deterministic)
}
func (m *AnalyzeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeResponse.Merge(m, src)
}
func (m *AnalyzeResponse) XXX_Size() int {
	return xxx_messageInfo_AnalyzeResponse.Size(m)
}
func (m *AnalyzeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeResponse proto.InternalMessageInfo

type isAnalyzeResponse_Result interface {
	isAnalyzeResponse_Result()
}

type AnalyzeResponse_ResolvedStatement struct {
	ResolvedStatement *resolved_astpb.AnyResolvedStatementProto `protobuf:"bytes,1,opt,name=resolved_statement,json=resolvedStatement,oneof"`
}

type AnalyzeResponse_ResolvedExpression struct {
	ResolvedExpression *resolved_astpb.AnyResolvedExprProto `protobuf:"bytes,3,opt,name=resolved_expression,json=resolvedExpression,oneof"`
}

func (*AnalyzeResponse_ResolvedStatement) isAnalyzeResponse_Result() {}

func (*AnalyzeResponse_ResolvedExpression) isAnalyzeResponse_Result() {}

func (m *AnalyzeResponse) GetResult() isAnalyzeResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AnalyzeResponse) GetResolvedStatement() *resolved_astpb.AnyResolvedStatementProto {
	if x, ok := m.GetResult().(*AnalyzeResponse_ResolvedStatement); ok {
		return x.ResolvedStatement
	}
	return nil
}

func (m *AnalyzeResponse) GetResolvedExpression() *resolved_astpb.AnyResolvedExprProto {
	if x, ok := m.GetResult().(*AnalyzeResponse_ResolvedExpression); ok {
		return x.ResolvedExpression
	}
	return nil
}

func (m *AnalyzeResponse) GetResumeBytePosition() int32 {
	if m != nil && m.ResumeBytePosition != nil {
		return *m.ResumeBytePosition
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AnalyzeResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AnalyzeResponse_ResolvedStatement)(nil),
		(*AnalyzeResponse_ResolvedExpression)(nil),
	}
}

type BuildSqlRequest struct {
	SimpleCatalog       *simplecatalogpb.SimpleCatalogProto `protobuf:"bytes,1,opt,name=simple_catalog,json=simpleCatalog" json:"simple_catalog,omitempty"`
	FileDescriptorSet   []*descriptor.FileDescriptorSet     `protobuf:"bytes,2,rep,name=file_descriptor_set,json=fileDescriptorSet" json:"file_descriptor_set,omitempty"`
	RegisteredCatalogId *int64                              `protobuf:"varint,3,opt,name=registered_catalog_id,json=registeredCatalogId" json:"registered_catalog_id,omitempty"`
	// Types that are valid to be assigned to Target:
	//	*BuildSqlRequest_ResolvedStatement
	//	*BuildSqlRequest_ResolvedExpression
	Target               isBuildSqlRequest_Target `protobuf_oneof:"target"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BuildSqlRequest) Reset()         { *m = BuildSqlRequest{} }
func (m *BuildSqlRequest) String() string { return proto.CompactTextString(m) }
func (*BuildSqlRequest) ProtoMessage()    {}
func (*BuildSqlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{12}
}

func (m *BuildSqlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildSqlRequest.Unmarshal(m, b)
}
func (m *BuildSqlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildSqlRequest.Marshal(b, m, deterministic)
}
func (m *BuildSqlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildSqlRequest.Merge(m, src)
}
func (m *BuildSqlRequest) XXX_Size() int {
	return xxx_messageInfo_BuildSqlRequest.Size(m)
}
func (m *BuildSqlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildSqlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildSqlRequest proto.InternalMessageInfo

func (m *BuildSqlRequest) GetSimpleCatalog() *simplecatalogpb.SimpleCatalogProto {
	if m != nil {
		return m.SimpleCatalog
	}
	return nil
}

func (m *BuildSqlRequest) GetFileDescriptorSet() []*descriptor.FileDescriptorSet {
	if m != nil {
		return m.FileDescriptorSet
	}
	return nil
}

func (m *BuildSqlRequest) GetRegisteredCatalogId() int64 {
	if m != nil && m.RegisteredCatalogId != nil {
		return *m.RegisteredCatalogId
	}
	return 0
}

type isBuildSqlRequest_Target interface {
	isBuildSqlRequest_Target()
}

type BuildSqlRequest_ResolvedStatement struct {
	ResolvedStatement *resolved_astpb.AnyResolvedStatementProto `protobuf:"bytes,4,opt,name=resolved_statement,json=resolvedStatement,oneof"`
}

type BuildSqlRequest_ResolvedExpression struct {
	ResolvedExpression *resolved_astpb.AnyResolvedExprProto `protobuf:"bytes,5,opt,name=resolved_expression,json=resolvedExpression,oneof"`
}

func (*BuildSqlRequest_ResolvedStatement) isBuildSqlRequest_Target() {}

func (*BuildSqlRequest_ResolvedExpression) isBuildSqlRequest_Target() {}

func (m *BuildSqlRequest) GetTarget() isBuildSqlRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *BuildSqlRequest) GetResolvedStatement() *resolved_astpb.AnyResolvedStatementProto {
	if x, ok := m.GetTarget().(*BuildSqlRequest_ResolvedStatement); ok {
		return x.ResolvedStatement
	}
	return nil
}

func (m *BuildSqlRequest) GetResolvedExpression() *resolved_astpb.AnyResolvedExprProto {
	if x, ok := m.GetTarget().(*BuildSqlRequest_ResolvedExpression); ok {
		return x.ResolvedExpression
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BuildSqlRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BuildSqlRequest_ResolvedStatement)(nil),
		(*BuildSqlRequest_ResolvedExpression)(nil),
	}
}

type BuildSqlResponse struct {
	Sql                  *string  `protobuf:"bytes,1,opt,name=sql" json:"sql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildSqlResponse) Reset()         { *m = BuildSqlResponse{} }
func (m *BuildSqlResponse) String() string { return proto.CompactTextString(m) }
func (*BuildSqlResponse) ProtoMessage()    {}
func (*BuildSqlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{13}
}

func (m *BuildSqlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildSqlResponse.Unmarshal(m, b)
}
func (m *BuildSqlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildSqlResponse.Marshal(b, m, deterministic)
}
func (m *BuildSqlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildSqlResponse.Merge(m, src)
}
func (m *BuildSqlResponse) XXX_Size() int {
	return xxx_messageInfo_BuildSqlResponse.Size(m)
}
func (m *BuildSqlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildSqlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildSqlResponse proto.InternalMessageInfo

func (m *BuildSqlResponse) GetSql() string {
	if m != nil && m.Sql != nil {
		return *m.Sql
	}
	return ""
}

type ExtractTableNamesFromStatementRequest struct {
	SqlStatement         *string                         `protobuf:"bytes,1,opt,name=sql_statement,json=sqlStatement" json:"sql_statement,omitempty"`
	Options              *optionspb.LanguageOptionsProto `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
	AllowScript          *bool                           `protobuf:"varint,3,opt,name=allow_script,json=allowScript" json:"allow_script,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ExtractTableNamesFromStatementRequest) Reset()         { *m = ExtractTableNamesFromStatementRequest{} }
func (m *ExtractTableNamesFromStatementRequest) String() string { return proto.CompactTextString(m) }
func (*ExtractTableNamesFromStatementRequest) ProtoMessage()    {}
func (*ExtractTableNamesFromStatementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{14}
}

func (m *ExtractTableNamesFromStatementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractTableNamesFromStatementRequest.Unmarshal(m, b)
}
func (m *ExtractTableNamesFromStatementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractTableNamesFromStatementRequest.Marshal(b, m, deterministic)
}
func (m *ExtractTableNamesFromStatementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractTableNamesFromStatementRequest.Merge(m, src)
}
func (m *ExtractTableNamesFromStatementRequest) XXX_Size() int {
	return xxx_messageInfo_ExtractTableNamesFromStatementRequest.Size(m)
}
func (m *ExtractTableNamesFromStatementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractTableNamesFromStatementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractTableNamesFromStatementRequest proto.InternalMessageInfo

func (m *ExtractTableNamesFromStatementRequest) GetSqlStatement() string {
	if m != nil && m.SqlStatement != nil {
		return *m.SqlStatement
	}
	return ""
}

func (m *ExtractTableNamesFromStatementRequest) GetOptions() *optionspb.LanguageOptionsProto {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ExtractTableNamesFromStatementRequest) GetAllowScript() bool {
	if m != nil && m.AllowScript != nil {
		return *m.AllowScript
	}
	return false
}

type ExtractTableNamesFromStatementResponse struct {
	TableName            []*ExtractTableNamesFromStatementResponse_TableName `protobuf:"bytes,1,rep,name=table_name,json=tableName" json:"table_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *ExtractTableNamesFromStatementResponse) Reset() {
	*m = ExtractTableNamesFromStatementResponse{}
}
func (m *ExtractTableNamesFromStatementResponse) String() string { return proto.CompactTextString(m) }
func (*ExtractTableNamesFromStatementResponse) ProtoMessage()    {}
func (*ExtractTableNamesFromStatementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{15}
}

func (m *ExtractTableNamesFromStatementResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractTableNamesFromStatementResponse.Unmarshal(m, b)
}
func (m *ExtractTableNamesFromStatementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractTableNamesFromStatementResponse.Marshal(b, m, deterministic)
}
func (m *ExtractTableNamesFromStatementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractTableNamesFromStatementResponse.Merge(m, src)
}
func (m *ExtractTableNamesFromStatementResponse) XXX_Size() int {
	return xxx_messageInfo_ExtractTableNamesFromStatementResponse.Size(m)
}
func (m *ExtractTableNamesFromStatementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractTableNamesFromStatementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractTableNamesFromStatementResponse proto.InternalMessageInfo

func (m *ExtractTableNamesFromStatementResponse) GetTableName() []*ExtractTableNamesFromStatementResponse_TableName {
	if m != nil {
		return m.TableName
	}
	return nil
}

type ExtractTableNamesFromStatementResponse_TableName struct {
	TableNameSegment     []string `protobuf:"bytes,1,rep,name=table_name_segment,json=tableNameSegment" json:"table_name_segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtractTableNamesFromStatementResponse_TableName) Reset() {
	*m = ExtractTableNamesFromStatementResponse_TableName{}
}
func (m *ExtractTableNamesFromStatementResponse_TableName) String() string {
	return proto.CompactTextString(m)
}
func (*ExtractTableNamesFromStatementResponse_TableName) ProtoMessage() {}
func (*ExtractTableNamesFromStatementResponse_TableName) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{15, 0}
}

func (m *ExtractTableNamesFromStatementResponse_TableName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractTableNamesFromStatementResponse_TableName.Unmarshal(m, b)
}
func (m *ExtractTableNamesFromStatementResponse_TableName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractTableNamesFromStatementResponse_TableName.Marshal(b, m, deterministic)
}
func (m *ExtractTableNamesFromStatementResponse_TableName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractTableNamesFromStatementResponse_TableName.Merge(m, src)
}
func (m *ExtractTableNamesFromStatementResponse_TableName) XXX_Size() int {
	return xxx_messageInfo_ExtractTableNamesFromStatementResponse_TableName.Size(m)
}
func (m *ExtractTableNamesFromStatementResponse_TableName) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractTableNamesFromStatementResponse_TableName.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractTableNamesFromStatementResponse_TableName proto.InternalMessageInfo

func (m *ExtractTableNamesFromStatementResponse_TableName) GetTableNameSegment() []string {
	if m != nil {
		return m.TableNameSegment
	}
	return nil
}

type ExtractTableNamesFromNextStatementRequest struct {
	ParseResumeLocation  *parse_resume_locationpb.ParseResumeLocationProto `protobuf:"bytes,1,req,name=parse_resume_location,json=parseResumeLocation" json:"parse_resume_location,omitempty"`
	Options              *optionspb.LanguageOptionsProto                   `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *ExtractTableNamesFromNextStatementRequest) Reset() {
	*m = ExtractTableNamesFromNextStatementRequest{}
}
func (m *ExtractTableNamesFromNextStatementRequest) String() string { return proto.CompactTextString(m) }
func (*ExtractTableNamesFromNextStatementRequest) ProtoMessage()    {}
func (*ExtractTableNamesFromNextStatementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{16}
}

func (m *ExtractTableNamesFromNextStatementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementRequest.Unmarshal(m, b)
}
func (m *ExtractTableNamesFromNextStatementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementRequest.Marshal(b, m, deterministic)
}
func (m *ExtractTableNamesFromNextStatementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractTableNamesFromNextStatementRequest.Merge(m, src)
}
func (m *ExtractTableNamesFromNextStatementRequest) XXX_Size() int {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementRequest.Size(m)
}
func (m *ExtractTableNamesFromNextStatementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractTableNamesFromNextStatementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractTableNamesFromNextStatementRequest proto.InternalMessageInfo

func (m *ExtractTableNamesFromNextStatementRequest) GetParseResumeLocation() *parse_resume_locationpb.ParseResumeLocationProto {
	if m != nil {
		return m.ParseResumeLocation
	}
	return nil
}

func (m *ExtractTableNamesFromNextStatementRequest) GetOptions() *optionspb.LanguageOptionsProto {
	if m != nil {
		return m.Options
	}
	return nil
}

type ExtractTableNamesFromNextStatementResponse struct {
	TableName            []*ExtractTableNamesFromNextStatementResponse_TableName `protobuf:"bytes,1,rep,name=table_name,json=tableName" json:"table_name,omitempty"`
	ResumeBytePosition   *int32                                                  `protobuf:"varint,2,opt,name=resume_byte_position,json=resumeBytePosition" json:"resume_byte_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *ExtractTableNamesFromNextStatementResponse) Reset() {
	*m = ExtractTableNamesFromNextStatementResponse{}
}
func (m *ExtractTableNamesFromNextStatementResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ExtractTableNamesFromNextStatementResponse) ProtoMessage() {}
func (*ExtractTableNamesFromNextStatementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{17}
}

func (m *ExtractTableNamesFromNextStatementResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementResponse.Unmarshal(m, b)
}
func (m *ExtractTableNamesFromNextStatementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementResponse.Marshal(b, m, deterministic)
}
func (m *ExtractTableNamesFromNextStatementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractTableNamesFromNextStatementResponse.Merge(m, src)
}
func (m *ExtractTableNamesFromNextStatementResponse) XXX_Size() int {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementResponse.Size(m)
}
func (m *ExtractTableNamesFromNextStatementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractTableNamesFromNextStatementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractTableNamesFromNextStatementResponse proto.InternalMessageInfo

func (m *ExtractTableNamesFromNextStatementResponse) GetTableName() []*ExtractTableNamesFromNextStatementResponse_TableName {
	if m != nil {
		return m.TableName
	}
	return nil
}

func (m *ExtractTableNamesFromNextStatementResponse) GetResumeBytePosition() int32 {
	if m != nil && m.ResumeBytePosition != nil {
		return *m.ResumeBytePosition
	}
	return 0
}

type ExtractTableNamesFromNextStatementResponse_TableName struct {
	TableNameSegment     []string `protobuf:"bytes,1,rep,name=table_name_segment,json=tableNameSegment" json:"table_name_segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtractTableNamesFromNextStatementResponse_TableName) Reset() {
	*m = ExtractTableNamesFromNextStatementResponse_TableName{}
}
func (m *ExtractTableNamesFromNextStatementResponse_TableName) String() string {
	return proto.CompactTextString(m)
}
func (*ExtractTableNamesFromNextStatementResponse_TableName) ProtoMessage() {}
func (*ExtractTableNamesFromNextStatementResponse_TableName) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{17, 0}
}

func (m *ExtractTableNamesFromNextStatementResponse_TableName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementResponse_TableName.Unmarshal(m, b)
}
func (m *ExtractTableNamesFromNextStatementResponse_TableName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementResponse_TableName.Marshal(b, m, deterministic)
}
func (m *ExtractTableNamesFromNextStatementResponse_TableName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractTableNamesFromNextStatementResponse_TableName.Merge(m, src)
}
func (m *ExtractTableNamesFromNextStatementResponse_TableName) XXX_Size() int {
	return xxx_messageInfo_ExtractTableNamesFromNextStatementResponse_TableName.Size(m)
}
func (m *ExtractTableNamesFromNextStatementResponse_TableName) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractTableNamesFromNextStatementResponse_TableName.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractTableNamesFromNextStatementResponse_TableName proto.InternalMessageInfo

func (m *ExtractTableNamesFromNextStatementResponse_TableName) GetTableNameSegment() []string {
	if m != nil {
		return m.TableNameSegment
	}
	return nil
}

type FormatSqlRequest struct {
	Sql                  *string  `protobuf:"bytes,1,opt,name=sql" json:"sql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FormatSqlRequest) Reset()         { *m = FormatSqlRequest{} }
func (m *FormatSqlRequest) String() string { return proto.CompactTextString(m) }
func (*FormatSqlRequest) ProtoMessage()    {}
func (*FormatSqlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{18}
}

func (m *FormatSqlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatSqlRequest.Unmarshal(m, b)
}
func (m *FormatSqlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatSqlRequest.Marshal(b, m, deterministic)
}
func (m *FormatSqlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatSqlRequest.Merge(m, src)
}
func (m *FormatSqlRequest) XXX_Size() int {
	return xxx_messageInfo_FormatSqlRequest.Size(m)
}
func (m *FormatSqlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatSqlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FormatSqlRequest proto.InternalMessageInfo

func (m *FormatSqlRequest) GetSql() string {
	if m != nil && m.Sql != nil {
		return *m.Sql
	}
	return ""
}

type FormatSqlResponse struct {
	Sql                  *string  `protobuf:"bytes,1,opt,name=sql" json:"sql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FormatSqlResponse) Reset()         { *m = FormatSqlResponse{} }
func (m *FormatSqlResponse) String() string { return proto.CompactTextString(m) }
func (*FormatSqlResponse) ProtoMessage()    {}
func (*FormatSqlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{19}
}

func (m *FormatSqlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatSqlResponse.Unmarshal(m, b)
}
func (m *FormatSqlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatSqlResponse.Marshal(b, m, deterministic)
}
func (m *FormatSqlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatSqlResponse.Merge(m, src)
}
func (m *FormatSqlResponse) XXX_Size() int {
	return xxx_messageInfo_FormatSqlResponse.Size(m)
}
func (m *FormatSqlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatSqlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FormatSqlResponse proto.InternalMessageInfo

func (m *FormatSqlResponse) GetSql() string {
	if m != nil && m.Sql != nil {
		return *m.Sql
	}
	return ""
}

type RegisterCatalogRequest struct {
	SimpleCatalog        *simplecatalogpb.SimpleCatalogProto `protobuf:"bytes,1,opt,name=simple_catalog,json=simpleCatalog" json:"simple_catalog,omitempty"`
	FileDescriptorSet    []*descriptor.FileDescriptorSet     `protobuf:"bytes,2,rep,name=file_descriptor_set,json=fileDescriptorSet" json:"file_descriptor_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *RegisterCatalogRequest) Reset()         { *m = RegisterCatalogRequest{} }
func (m *RegisterCatalogRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterCatalogRequest) ProtoMessage()    {}
func (*RegisterCatalogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{20}
}

func (m *RegisterCatalogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterCatalogRequest.Unmarshal(m, b)
}
func (m *RegisterCatalogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterCatalogRequest.Marshal(b, m, deterministic)
}
func (m *RegisterCatalogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterCatalogRequest.Merge(m, src)
}
func (m *RegisterCatalogRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterCatalogRequest.Size(m)
}
func (m *RegisterCatalogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterCatalogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterCatalogRequest proto.InternalMessageInfo

func (m *RegisterCatalogRequest) GetSimpleCatalog() *simplecatalogpb.SimpleCatalogProto {
	if m != nil {
		return m.SimpleCatalog
	}
	return nil
}

func (m *RegisterCatalogRequest) GetFileDescriptorSet() []*descriptor.FileDescriptorSet {
	if m != nil {
		return m.FileDescriptorSet
	}
	return nil
}

type RegisterResponse struct {
	RegisteredId         *int64   `protobuf:"varint,1,opt,name=registered_id,json=registeredId" json:"registered_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{21}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetRegisteredId() int64 {
	if m != nil && m.RegisteredId != nil {
		return *m.RegisteredId
	}
	return 0
}

type UnregisterRequest struct {
	RegisteredId         *int64   `protobuf:"varint,1,opt,name=registered_id,json=registeredId" json:"registered_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterRequest) Reset()         { *m = UnregisterRequest{} }
func (m *UnregisterRequest) String() string { return proto.CompactTextString(m) }
func (*UnregisterRequest) ProtoMessage()    {}
func (*UnregisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{22}
}

func (m *UnregisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterRequest.Unmarshal(m, b)
}
func (m *UnregisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterRequest.Marshal(b, m, deterministic)
}
func (m *UnregisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterRequest.Merge(m, src)
}
func (m *UnregisterRequest) XXX_Size() int {
	return xxx_messageInfo_UnregisterRequest.Size(m)
}
func (m *UnregisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterRequest proto.InternalMessageInfo

func (m *UnregisterRequest) GetRegisteredId() int64 {
	if m != nil && m.RegisteredId != nil {
		return *m.RegisteredId
	}
	return 0
}

type GetBuiltinFunctionsResponse struct {
	Function             []*functionpb.FunctionProto `protobuf:"bytes,1,rep,name=function" json:"function,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetBuiltinFunctionsResponse) Reset()         { *m = GetBuiltinFunctionsResponse{} }
func (m *GetBuiltinFunctionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetBuiltinFunctionsResponse) ProtoMessage()    {}
func (*GetBuiltinFunctionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{23}
}

func (m *GetBuiltinFunctionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBuiltinFunctionsResponse.Unmarshal(m, b)
}
func (m *GetBuiltinFunctionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBuiltinFunctionsResponse.Marshal(b, m, deterministic)
}
func (m *GetBuiltinFunctionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBuiltinFunctionsResponse.Merge(m, src)
}
func (m *GetBuiltinFunctionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetBuiltinFunctionsResponse.Size(m)
}
func (m *GetBuiltinFunctionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBuiltinFunctionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBuiltinFunctionsResponse proto.InternalMessageInfo

func (m *GetBuiltinFunctionsResponse) GetFunction() []*functionpb.FunctionProto {
	if m != nil {
		return m.Function
	}
	return nil
}

type AddSimpleTableRequest struct {
	RegisteredCatalogId  *int64                           `protobuf:"varint,1,opt,name=registered_catalog_id,json=registeredCatalogId" json:"registered_catalog_id,omitempty"`
	Table                *simple_tablepb.SimpleTableProto `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
	FileDescriptorSet    []*descriptor.FileDescriptorSet  `protobuf:"bytes,3,rep,name=file_descriptor_set,json=fileDescriptorSet" json:"file_descriptor_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *AddSimpleTableRequest) Reset()         { *m = AddSimpleTableRequest{} }
func (m *AddSimpleTableRequest) String() string { return proto.CompactTextString(m) }
func (*AddSimpleTableRequest) ProtoMessage()    {}
func (*AddSimpleTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{24}
}

func (m *AddSimpleTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSimpleTableRequest.Unmarshal(m, b)
}
func (m *AddSimpleTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSimpleTableRequest.Marshal(b, m, deterministic)
}
func (m *AddSimpleTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSimpleTableRequest.Merge(m, src)
}
func (m *AddSimpleTableRequest) XXX_Size() int {
	return xxx_messageInfo_AddSimpleTableRequest.Size(m)
}
func (m *AddSimpleTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSimpleTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddSimpleTableRequest proto.InternalMessageInfo

func (m *AddSimpleTableRequest) GetRegisteredCatalogId() int64 {
	if m != nil && m.RegisteredCatalogId != nil {
		return *m.RegisteredCatalogId
	}
	return 0
}

func (m *AddSimpleTableRequest) GetTable() *simple_tablepb.SimpleTableProto {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *AddSimpleTableRequest) GetFileDescriptorSet() []*descriptor.FileDescriptorSet {
	if m != nil {
		return m.FileDescriptorSet
	}
	return nil
}

type LanguageOptionsRequest struct {
	MaximumFeatures      *bool                       `protobuf:"varint,1,opt,name=maximum_features,json=maximumFeatures" json:"maximum_features,omitempty"`
	LanguageVersion      *optionspb1.LanguageVersion `protobuf:"varint,2,opt,name=language_version,json=languageVersion,enum=zetasql.LanguageVersion" json:"language_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *LanguageOptionsRequest) Reset()         { *m = LanguageOptionsRequest{} }
func (m *LanguageOptionsRequest) String() string { return proto.CompactTextString(m) }
func (*LanguageOptionsRequest) ProtoMessage()    {}
func (*LanguageOptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{25}
}

func (m *LanguageOptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LanguageOptionsRequest.Unmarshal(m, b)
}
func (m *LanguageOptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LanguageOptionsRequest.Marshal(b, m, deterministic)
}
func (m *LanguageOptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LanguageOptionsRequest.Merge(m, src)
}
func (m *LanguageOptionsRequest) XXX_Size() int {
	return xxx_messageInfo_LanguageOptionsRequest.Size(m)
}
func (m *LanguageOptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LanguageOptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LanguageOptionsRequest proto.InternalMessageInfo

func (m *LanguageOptionsRequest) GetMaximumFeatures() bool {
	if m != nil && m.MaximumFeatures != nil {
		return *m.MaximumFeatures
	}
	return false
}

func (m *LanguageOptionsRequest) GetLanguageVersion() optionspb1.LanguageVersion {
	if m != nil && m.LanguageVersion != nil {
		return *m.LanguageVersion
	}
	return optionspb1.LanguageVersion_VERSION_CURRENT
}

type AnalyzerOptionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnalyzerOptionsRequest) Reset()         { *m = AnalyzerOptionsRequest{} }
func (m *AnalyzerOptionsRequest) String() string { return proto.CompactTextString(m) }
func (*AnalyzerOptionsRequest) ProtoMessage()    {}
func (*AnalyzerOptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e5b18e59b3c8ce8, []int{26}
}

func (m *AnalyzerOptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzerOptionsRequest.Unmarshal(m, b)
}
func (m *AnalyzerOptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzerOptionsRequest.Marshal(b, m, deterministic)
}
func (m *AnalyzerOptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzerOptionsRequest.Merge(m, src)
}
func (m *AnalyzerOptionsRequest) XXX_Size() int {
	return xxx_messageInfo_AnalyzerOptionsRequest.Size(m)
}
func (m *AnalyzerOptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzerOptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzerOptionsRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PrepareRequest)(nil), "zetasql.local_service.PrepareRequest")
	proto.RegisterType((*PreparedState)(nil), "zetasql.local_service.PreparedState")
	proto.RegisterType((*PrepareResponse)(nil), "zetasql.local_service.PrepareResponse")
	proto.RegisterType((*EvaluateRequest)(nil), "zetasql.local_service.EvaluateRequest")
	proto.RegisterType((*EvaluateRequest_Parameter)(nil), "zetasql.local_service.EvaluateRequest.Parameter")
	proto.RegisterType((*EvaluateResponse)(nil), "zetasql.local_service.EvaluateResponse")
	proto.RegisterType((*EvaluateRequestBatch)(nil), "zetasql.local_service.EvaluateRequestBatch")
	proto.RegisterType((*EvaluateResponseBatch)(nil), "zetasql.local_service.EvaluateResponseBatch")
	proto.RegisterType((*UnprepareRequest)(nil), "zetasql.local_service.UnprepareRequest")
	proto.RegisterType((*TableFromProtoRequest)(nil), "zetasql.local_service.TableFromProtoRequest")
	proto.RegisterType((*RegisteredParseResumeLocationProto)(nil), "zetasql.local_service.RegisteredParseResumeLocationProto")
	proto.RegisterType((*AnalyzeRequest)(nil), "zetasql.local_service.AnalyzeRequest")
	proto.RegisterType((*AnalyzeResponse)(nil), "zetasql.local_service.AnalyzeResponse")
	proto.RegisterType((*BuildSqlRequest)(nil), "zetasql.local_service.BuildSqlRequest")
	proto.RegisterType((*BuildSqlResponse)(nil), "zetasql.local_service.BuildSqlResponse")
	proto.RegisterType((*ExtractTableNamesFromStatementRequest)(nil), "zetasql.local_service.ExtractTableNamesFromStatementRequest")
	proto.RegisterType((*ExtractTableNamesFromStatementResponse)(nil), "zetasql.local_service.ExtractTableNamesFromStatementResponse")
	proto.RegisterType((*ExtractTableNamesFromStatementResponse_TableName)(nil), "zetasql.local_service.ExtractTableNamesFromStatementResponse.TableName")
	proto.RegisterType((*ExtractTableNamesFromNextStatementRequest)(nil), "zetasql.local_service.ExtractTableNamesFromNextStatementRequest")
	proto.RegisterType((*ExtractTableNamesFromNextStatementResponse)(nil), "zetasql.local_service.ExtractTableNamesFromNextStatementResponse")
	proto.RegisterType((*ExtractTableNamesFromNextStatementResponse_TableName)(nil), "zetasql.local_service.ExtractTableNamesFromNextStatementResponse.TableName")
	proto.RegisterType((*FormatSqlRequest)(nil), "zetasql.local_service.FormatSqlRequest")
	proto.RegisterType((*FormatSqlResponse)(nil), "zetasql.local_service.FormatSqlResponse")
	proto.RegisterType((*RegisterCatalogRequest)(nil), "zetasql.local_service.RegisterCatalogRequest")
	proto.RegisterType((*RegisterResponse)(nil), "zetasql.local_service.RegisterResponse")
	proto.RegisterType((*UnregisterRequest)(nil), "zetasql.local_service.UnregisterRequest")
	proto.RegisterType((*GetBuiltinFunctionsResponse)(nil), "zetasql.local_service.GetBuiltinFunctionsResponse")
	proto.RegisterType((*AddSimpleTableRequest)(nil), "zetasql.local_service.AddSimpleTableRequest")
	proto.RegisterType((*LanguageOptionsRequest)(nil), "zetasql.local_service.LanguageOptionsRequest")
	proto.RegisterType((*AnalyzerOptionsRequest)(nil), "zetasql.local_service.AnalyzerOptionsRequest")
}

func init() {
	proto.RegisterFile("zetasql/local_service/local_service.proto", fileDescriptor_2e5b18e59b3c8ce8)
}

var fileDescriptor_2e5b18e59b3c8ce8 = []byte{
	// 1810 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x5b, 0x6f, 0xdb, 0xc8,
	0x15, 0x16, 0x25, 0x39, 0x96, 0x8e, 0x6f, 0xf2, 0xf8, 0x52, 0x85, 0x6e, 0x0a, 0x67, 0x12, 0x3b,
	0x76, 0x9a, 0xc8, 0x81, 0x53, 0x20, 0x0d, 0x90, 0x02, 0x89, 0x5d, 0x5f, 0x92, 0x1a, 0xa9, 0x43,
	0xe5, 0x86, 0xa0, 0x2d, 0x4b, 0x4b, 0x63, 0x55, 0x2d, 0x6f, 0x22, 0x47, 0xae, 0x9d, 0xb7, 0x02,
	0x2d, 0xd0, 0xa7, 0xfe, 0x80, 0xa2, 0x40, 0x1f, 0x5b, 0xa0, 0x2f, 0x7d, 0x5f, 0x60, 0xff, 0xc0,
	0x02, 0xbb, 0xfb, 0x07, 0xf6, 0x5f, 0xec, 0x0f, 0x58, 0x70, 0x38, 0x33, 0xa4, 0x28, 0x52, 0x92,
	0xed, 0x78, 0xb1, 0x6f, 0xe2, 0x39, 0x67, 0xce, 0x9c, 0x39, 0xd7, 0xef, 0x08, 0xd6, 0x3f, 0x12,
	0x6a, 0xf8, 0x1d, 0x73, 0xc3, 0x74, 0x1a, 0x86, 0xa9, 0xfb, 0xc4, 0x3b, 0x69, 0x37, 0x48, 0xef,
	0x57, 0xcd, 0xf5, 0x1c, 0xea, 0xa0, 0x05, 0x2e, 0x5a, 0xeb, 0x61, 0xaa, 0x4b, 0x2d, 0xc7, 0x69,
	0x99, 0x64, 0x83, 0x09, 0x1d, 0x75, 0x8f, 0x37, 0x88, 0xe5, 0xd2, 0xb3, 0xf0, 0x8c, 0xba, 0x9c,
	0x64, 0x36, 0x89, 0xdf, 0xf0, 0xda, 0x2e, 0x75, 0x3c, 0x2e, 0xf1, 0x63, 0x61, 0x00, 0xfb, 0xdc,
	0x38, 0xee, 0xda, 0x0d, 0xda, 0x76, 0x6c, 0xce, 0x5d, 0xea, 0xe5, 0x3a, 0x6e, 0xc0, 0xf3, 0x39,
	0x13, 0xf7, 0x32, 0xfd, 0xb6, 0xe5, 0x9a, 0x44, 0x6f, 0x18, 0xd4, 0x30, 0x9d, 0x56, 0x9f, 0xfa,
	0xee, 0x91, 0xd9, 0x6e, 0x24, 0x34, 0xdc, 0x4d, 0x70, 0x5d, 0xc3, 0xf3, 0x89, 0xee, 0x11, 0xbf,
	0x6b, 0x11, 0x3d, 0x78, 0x66, 0xcc, 0x94, 0x9b, 0x09, 0x59, 0x7e, 0x1d, 0x35, 0x8e, 0x4c, 0xee,
	0x21, 0xf5, 0x7a, 0x42, 0x84, 0x9e, 0xb9, 0x82, 0xa5, 0x26, 0x58, 0x27, 0x86, 0xd9, 0x15, 0xbc,
	0x3b, 0x82, 0xe7, 0x11, 0xdf, 0x31, 0x4f, 0x48, 0x53, 0x37, 0x7c, 0xda, 0xf3, 0x11, 0x0a, 0xe2,
	0xff, 0xe4, 0x61, 0xfa, 0xd0, 0x23, 0xae, 0xe1, 0x11, 0x8d, 0x74, 0xba, 0xc4, 0xa7, 0xa8, 0x02,
	0x05, 0xbf, 0x63, 0x56, 0x95, 0x65, 0x65, 0xad, 0xac, 0x05, 0x3f, 0xd1, 0x23, 0x18, 0xe7, 0x8f,
	0xac, 0xe6, 0x97, 0x95, 0xb5, 0x89, 0xcd, 0x1b, 0x35, 0x11, 0xb8, 0x67, 0xb6, 0x61, 0x9e, 0x7d,
	0x24, 0xde, 0xaf, 0x43, 0xfe, 0x61, 0xa0, 0x54, 0x13, 0xd2, 0x48, 0x83, 0xb9, 0xe3, 0xb6, 0x49,
	0xf4, 0x28, 0x44, 0xba, 0x4f, 0x68, 0xb5, 0xb0, 0x5c, 0x58, 0x9b, 0xd8, 0xc4, 0xb5, 0x30, 0x92,
	0x35, 0x11, 0xc9, 0xda, 0x6e, 0xdb, 0x24, 0xbf, 0x94, 0xa2, 0x75, 0x42, 0xb5, 0xd9, 0xe3, 0x24,
	0x09, 0x6d, 0xc1, 0x74, 0x6f, 0x58, 0xaa, 0x45, 0x66, 0xd3, 0x92, 0xb4, 0xa9, 0xce, 0xd8, 0xdb,
	0x21, 0x37, 0xb4, 0x68, 0xca, 0x8f, 0xd3, 0xd0, 0x26, 0x2c, 0x78, 0xa4, 0xd5, 0xf6, 0x29, 0xf1,
	0x48, 0x53, 0xe8, 0xd1, 0xdb, 0xcd, 0xea, 0xd8, 0xb2, 0xb2, 0x56, 0xd0, 0xe6, 0x22, 0x26, 0x3f,
	0xf1, 0xbc, 0x89, 0xff, 0x95, 0x87, 0x29, 0xee, 0xa9, 0x66, 0x9d, 0x1a, 0x94, 0xa0, 0x9f, 0xc1,
	0xa2, 0xcb, 0x09, 0x3a, 0x39, 0x75, 0x3d, 0xe2, 0xfb, 0x6d, 0xc7, 0x0e, 0xd4, 0x28, 0x4c, 0xcd,
	0xbc, 0xe0, 0xee, 0x48, 0xe6, 0xf3, 0x26, 0x7a, 0x08, 0x13, 0x4e, 0x97, 0xba, 0x5d, 0xaa, 0x07,
	0xb1, 0xe4, 0x0e, 0x45, 0xd2, 0xf8, 0xd7, 0x67, 0x2e, 0x09, 0x6d, 0x86, 0x50, 0x2c, 0x20, 0xa0,
	0xfb, 0x80, 0x3c, 0x72, 0x4c, 0x3c, 0x62, 0x37, 0x02, 0x83, 0x1d, 0xb3, 0x6b, 0xd9, 0x3e, 0xf3,
	0x63, 0x59, 0x9b, 0x8d, 0x38, 0xdb, 0x21, 0x03, 0x3d, 0x0c, 0xde, 0x27, 0xc5, 0x5d, 0xc3, 0x33,
	0x2c, 0x42, 0x89, 0xe7, 0x57, 0x8b, 0xec, 0xc4, 0x7c, 0xc4, 0x3c, 0x94, 0x3c, 0xf4, 0x04, 0x54,
	0xd7, 0xf1, 0xdb, 0x41, 0xe4, 0x0c, 0x33, 0x3a, 0xa4, 0x37, 0x9c, 0xae, 0x4d, 0xb9, 0x67, 0xaa,
	0x91, 0x84, 0x3c, 0xb9, 0x1d, 0xf0, 0xf1, 0xe7, 0x0a, 0xcc, 0xc8, 0x44, 0xf2, 0x5d, 0xc7, 0xf6,
	0xbf, 0x57, 0x07, 0x3d, 0x85, 0x92, 0x50, 0x56, 0x2d, 0xb0, 0x13, 0xb7, 0x6b, 0xa9, 0xcd, 0xa5,
	0xd6, 0x13, 0x43, 0x4d, 0x9e, 0xc2, 0x5f, 0x16, 0x60, 0x66, 0x27, 0xa8, 0xa1, 0x80, 0x9c, 0x59,
	0x0a, 0x2f, 0x60, 0x5c, 0x78, 0x3f, 0xcf, 0xb2, 0xf8, 0x41, 0xc6, 0x35, 0x09, 0x55, 0x35, 0xe9,
	0x2e, 0x4d, 0x28, 0x40, 0xfb, 0x70, 0x8d, 0x79, 0xd9, 0xe7, 0x05, 0x71, 0x7e, 0x55, 0xfc, 0x7c,
	0x56, 0x9d, 0x15, 0x2f, 0x53, 0x67, 0xd9, 0xc1, 0x1b, 0x1b, 0x10, 0xbc, 0x58, 0xab, 0xb8, 0x76,
	0x9e, 0x56, 0xa1, 0x1e, 0x42, 0x59, 0xbe, 0x0b, 0x21, 0x28, 0xda, 0x86, 0x45, 0xb8, 0xe3, 0xd9,
	0x6f, 0xb4, 0x0e, 0x63, 0xac, 0xc3, 0xf1, 0x84, 0x98, 0x93, 0x7a, 0xdf, 0x06, 0xd4, 0x50, 0x5b,
	0x28, 0xf1, 0xa2, 0x58, 0x2a, 0x54, 0x8a, 0xf8, 0x1b, 0x05, 0x2a, 0x91, 0xeb, 0x78, 0x4a, 0x4a,
	0x2d, 0xca, 0x30, 0x2d, 0x68, 0x15, 0x8a, 0x43, 0x12, 0x90, 0xf1, 0x07, 0x38, 0xaa, 0x30, 0xc0,
	0x51, 0xf1, 0x84, 0x2d, 0x5e, 0x28, 0x61, 0xdf, 0xc3, 0x7c, 0x22, 0x33, 0xb6, 0x0c, 0xda, 0xf8,
	0x03, 0x7a, 0x0a, 0xe3, 0x5e, 0xf8, 0x5d, 0x55, 0x58, 0x02, 0xac, 0x8e, 0x96, 0x57, 0x9a, 0x38,
	0x86, 0x7f, 0x03, 0x0b, 0x49, 0xc7, 0x85, 0xaa, 0xb7, 0xa1, 0xe4, 0x71, 0x02, 0xd7, 0x7d, 0x67,
	0xa8, 0xee, 0x50, 0x5c, 0x93, 0x07, 0xf1, 0x3e, 0x54, 0xde, 0xd8, 0x6e, 0xef, 0xcc, 0xb9, 0x50,
	0xa7, 0xc0, 0xff, 0x54, 0x60, 0xe1, 0x75, 0x30, 0x2c, 0x77, 0x3d, 0xc7, 0x0a, 0x43, 0xc2, 0xf5,
	0xdd, 0x87, 0x31, 0x96, 0xed, 0x3c, 0xcc, 0x3f, 0x92, 0x56, 0x32, 0xa9, 0x28, 0x82, 0xa1, 0x54,
	0x56, 0xfd, 0x84, 0x91, 0xbf, 0x58, 0xfd, 0x60, 0x1b, 0xb0, 0x26, 0xc7, 0xc8, 0x61, 0x80, 0x02,
	0x34, 0x06, 0x02, 0x0e, 0x38, 0x06, 0x60, 0x06, 0xa0, 0x5b, 0x30, 0x15, 0x9b, 0x44, 0xf2, 0xbd,
	0x93, 0x11, 0xf1, 0x79, 0x33, 0x10, 0x3a, 0x3a, 0xa3, 0x44, 0x17, 0xcd, 0x97, 0x19, 0x36, 0xa6,
	0x4d, 0x06, 0xc4, 0x43, 0x4e, 0xc3, 0x5f, 0x15, 0x61, 0x9a, 0x97, 0x98, 0xf0, 0x42, 0xac, 0x18,
	0x95, 0x73, 0xcd, 0xed, 0xfe, 0x19, 0x9b, 0x3f, 0xf7, 0x8c, 0xbd, 0x8a, 0xd9, 0x9f, 0x39, 0xb7,
	0x8b, 0x99, 0x73, 0x1b, 0xad, 0xc0, 0x94, 0xdf, 0x31, 0x75, 0x3f, 0xa8, 0x1e, 0x8b, 0xf0, 0x49,
	0x56, 0xde, 0xcf, 0x69, 0x93, 0x7e, 0xc7, 0xac, 0x0b, 0x2a, 0x7a, 0x07, 0x0b, 0xa9, 0x50, 0x8d,
	0xb7, 0xb1, 0x9b, 0x51, 0x06, 0x65, 0x84, 0x72, 0x3f, 0xa7, 0xcd, 0xb9, 0xfd, 0x3c, 0xf4, 0x57,
	0x05, 0x96, 0x63, 0x46, 0xa7, 0x5f, 0x32, 0xce, 0x2e, 0x79, 0x9c, 0x51, 0x4c, 0xc3, 0xf3, 0x68,
	0x3f, 0xa7, 0xdd, 0xf0, 0x06, 0x49, 0xa1, 0x3b, 0x30, 0x1d, 0xb8, 0x21, 0x2a, 0xae, 0x6a, 0x89,
	0xfb, 0x21, 0x70, 0x4f, 0x54, 0x56, 0x5b, 0x25, 0xb8, 0x46, 0x0d, 0xaf, 0x45, 0x28, 0xfe, 0x56,
	0x81, 0x19, 0x99, 0x51, 0xbc, 0x7f, 0xd6, 0x03, 0x20, 0xc2, 0x51, 0x64, 0xe4, 0x52, 0x85, 0x17,
	0x4a, 0x94, 0x5d, 0x67, 0x1a, 0x97, 0x92, 0x1e, 0x16, 0x76, 0xce, 0x7a, 0x49, 0x0e, 0x3a, 0x84,
	0x39, 0xa9, 0x34, 0x66, 0x60, 0xa1, 0x2f, 0x67, 0xa5, 0xd6, 0xc0, 0x5e, 0xa1, 0x50, 0x1a, 0x14,
	0x3d, 0x02, 0x3d, 0x80, 0x79, 0xee, 0xe2, 0xb4, 0xc2, 0x41, 0x21, 0x6f, 0x2b, 0x56, 0x3e, 0xc1,
	0xb3, 0x03, 0xaa, 0x49, 0xf1, 0x3f, 0x0a, 0x30, 0xb3, 0xd5, 0x6d, 0x9b, 0xcd, 0x7a, 0xc7, 0x14,
	0x95, 0xd4, 0x5f, 0x10, 0xca, 0xa7, 0x2a, 0x88, 0xfc, 0x95, 0x14, 0x44, 0x21, 0xbb, 0x20, 0xd2,
	0x43, 0x58, 0xbc, 0x92, 0x10, 0x8e, 0x5d, 0x38, 0x84, 0xb1, 0x3c, 0xbc, 0x0d, 0x95, 0x28, 0x1e,
	0x3c, 0x0f, 0xfb, 0x90, 0x19, 0xfe, 0xaf, 0x02, 0x2b, 0x3b, 0xa7, 0xd4, 0x33, 0x1a, 0x94, 0xcd,
	0x84, 0x97, 0x86, 0x45, 0xfc, 0x60, 0x30, 0x48, 0x23, 0x45, 0x30, 0x6f, 0x25, 0x3b, 0x42, 0xa8,
	0xa5, 0xb7, 0x1f, 0x0c, 0xd8, 0x79, 0x0e, 0x0c, 0xbb, 0xd5, 0x35, 0x5a, 0x24, 0xbd, 0x77, 0xde,
	0x84, 0x49, 0xc3, 0x34, 0x9d, 0x3f, 0xeb, 0x61, 0x9c, 0x58, 0x24, 0x4a, 0xda, 0x04, 0xa3, 0xd5,
	0x19, 0x09, 0x7f, 0xa1, 0xc0, 0xea, 0x30, 0x53, 0xf9, 0x3b, 0x8f, 0x01, 0xd8, 0x3a, 0xa8, 0x73,
	0x3c, 0x14, 0xe4, 0xca, 0x5e, 0xd6, 0xcc, 0x1d, 0x49, 0x65, 0x4d, 0xf2, 0xb5, 0x32, 0x15, 0x3f,
	0xd5, 0xc7, 0x50, 0x96, 0x74, 0x74, 0x0f, 0x50, 0x74, 0xa9, 0xee, 0x93, 0x16, 0xf7, 0x52, 0xb0,
	0x3b, 0x54, 0xe4, 0x99, 0x7a, 0x48, 0xc7, 0x9f, 0x29, 0xb0, 0x9e, 0x7a, 0xf5, 0x4b, 0x72, 0x4a,
	0xfb, 0x9c, 0xff, 0x26, 0xab, 0xcf, 0x2a, 0xcb, 0xf9, 0x91, 0xfa, 0x6c, 0x7a, 0x97, 0xbd, 0x68,
	0xb8, 0xf0, 0xdf, 0xf2, 0x70, 0x77, 0x14, 0xeb, 0x79, 0x3c, 0xfe, 0x98, 0x12, 0x8f, 0x5f, 0x9d,
	0x27, 0x1e, 0xa9, 0x6a, 0x53, 0x63, 0x72, 0xfe, 0x26, 0x76, 0x99, 0x28, 0xde, 0x86, 0xca, 0xae,
	0xe3, 0x59, 0x06, 0x8d, 0x75, 0xbd, 0xfe, 0x22, 0x5b, 0x81, 0xd9, 0x98, 0x54, 0x66, 0x2d, 0xfe,
	0x5f, 0x81, 0x45, 0x31, 0xb4, 0x78, 0xe3, 0xf9, 0x81, 0x77, 0x52, 0xfc, 0x08, 0x2a, 0xc2, 0x62,
	0xf9, 0xb0, 0x51, 0xc0, 0x19, 0xfe, 0x39, 0xcc, 0xbe, 0xb1, 0x3d, 0x79, 0x54, 0xb6, 0x98, 0xe1,
	0x27, 0x5f, 0xc1, 0xd2, 0x1e, 0xa1, 0x41, 0x6b, 0xa3, 0x6d, 0x7b, 0x97, 0xff, 0x4b, 0xe5, 0xcb,
	0xdb, 0x37, 0xa1, 0x24, 0xfe, 0xba, 0xe2, 0x89, 0xb6, 0x28, 0x7d, 0x24, 0xa4, 0x43, 0xf7, 0x48,
	0x39, 0xfc, 0xb5, 0x02, 0x0b, 0xcf, 0x9a, 0xcd, 0xd0, 0x85, 0x2c, 0x15, 0x84, 0x45, 0x99, 0x93,
	0x42, 0xc9, 0x9e, 0x14, 0x1b, 0x30, 0xc6, 0xf2, 0x84, 0x97, 0xd4, 0xf5, 0x44, 0x88, 0x98, 0x7e,
	0x8e, 0xa3, 0x99, 0xdc, 0x55, 0x60, 0x3e, 0xfc, 0x77, 0x05, 0x16, 0x13, 0x25, 0x2c, 0xde, 0xb4,
	0x0e, 0x15, 0xcb, 0x38, 0x6d, 0x5b, 0x5d, 0x4b, 0x3f, 0x26, 0x06, 0xed, 0x7a, 0x24, 0x04, 0xba,
	0x25, 0x6d, 0x86, 0xd3, 0x77, 0x39, 0x19, 0x6d, 0x43, 0xc5, 0xe4, 0x4a, 0xf4, 0x13, 0xe2, 0xf9,
	0xa2, 0x8e, 0xa6, 0x37, 0xab, 0x7d, 0x8d, 0xe2, 0x6d, 0xc8, 0xd7, 0x66, 0xcc, 0x5e, 0x02, 0xae,
	0xc2, 0x62, 0x02, 0x37, 0x73, 0x4b, 0x36, 0xff, 0x52, 0x81, 0xb9, 0x0f, 0x84, 0x1a, 0xf5, 0x8e,
	0x19, 0xb4, 0x24, 0xb3, 0x1e, 0xb6, 0x00, 0xf4, 0x01, 0xc6, 0xf9, 0xfa, 0x86, 0x56, 0x06, 0xaf,
	0x77, 0x5c, 0x93, 0xba, 0x3a, 0x4c, 0x8c, 0x6f, 0x51, 0x39, 0xf4, 0x5b, 0x28, 0x89, 0x2d, 0x0b,
	0x8d, 0xb8, 0xe2, 0xa9, 0xa3, 0xae, 0x6b, 0x38, 0x87, 0x3a, 0x30, 0x2d, 0xa8, 0x75, 0xea, 0x11,
	0xc3, 0x42, 0x3f, 0x1d, 0xed, 0x12, 0xb6, 0x2a, 0xaa, 0xf7, 0x46, 0xbc, 0x89, 0x49, 0xe3, 0xdc,
	0x9a, 0xf2, 0x40, 0x41, 0x2f, 0xa1, 0x2c, 0x37, 0x43, 0x94, 0x65, 0x6a, 0x72, 0x77, 0x54, 0x17,
	0xfb, 0xf2, 0x6a, 0xc7, 0x72, 0xe9, 0x19, 0xce, 0xa1, 0xdf, 0xc1, 0xec, 0x1e, 0xa1, 0xbd, 0x1b,
	0x22, 0xca, 0x32, 0x2c, 0x75, 0x91, 0x54, 0xb3, 0x73, 0x1e, 0xe7, 0xd0, 0x9f, 0x60, 0x26, 0xd1,
	0xe5, 0xd0, 0xfd, 0x21, 0x10, 0xbe, 0xb7, 0x1b, 0x66, 0xc6, 0x23, 0xd9, 0x8a, 0xd8, 0x65, 0x4b,
	0x82, 0x9a, 0x86, 0xef, 0x87, 0x0f, 0xce, 0xf3, 0x5c, 0xf6, 0x01, 0xc6, 0x79, 0xa6, 0x67, 0xe6,
	0x6d, 0xef, 0xae, 0x99, 0x99, 0xb7, 0x89, 0x05, 0x22, 0xcc, 0x5b, 0x01, 0xe7, 0x32, 0xf3, 0x36,
	0x81, 0xbf, 0x33, 0x4d, 0x4f, 0xe2, 0x42, 0x9c, 0x43, 0xff, 0x56, 0xe0, 0x27, 0x83, 0x91, 0x10,
	0x7a, 0x72, 0x41, 0x00, 0x15, 0xda, 0xf2, 0x8b, 0x4b, 0xc1, 0x2f, 0x9c, 0x43, 0xff, 0x53, 0x00,
	0x0f, 0xc7, 0x06, 0xe8, 0xe9, 0x25, 0x60, 0x45, 0x68, 0xe9, 0xb3, 0x4b, 0x03, 0x13, 0x9c, 0x43,
	0xbf, 0x87, 0xb2, 0x1c, 0xf9, 0x99, 0x45, 0x99, 0x84, 0x0e, 0xea, 0xda, 0x70, 0x41, 0x79, 0x43,
	0x0b, 0x2a, 0x07, 0xc4, 0x6e, 0x13, 0x9b, 0x5e, 0xf1, 0x45, 0xef, 0xe2, 0xa3, 0x5a, 0x54, 0xec,
	0x5a, 0x66, 0x9f, 0x49, 0x0c, 0xf5, 0x01, 0x8d, 0xa6, 0x01, 0x37, 0x22, 0xf1, 0xb4, 0xea, 0xfc,
	0x14, 0x97, 0x9c, 0xc2, 0x5c, 0x0a, 0x5c, 0x88, 0x75, 0x65, 0x36, 0x80, 0x5e, 0x1d, 0x24, 0x24,
	0xe2, 0xb0, 0x57, 0xdd, 0xcc, 0xb0, 0x63, 0x00, 0x0e, 0xc1, 0x39, 0xf4, 0x1e, 0xa6, 0x7b, 0x41,
	0x45, 0x66, 0x13, 0x4d, 0xc5, 0x1e, 0x03, 0xde, 0xd4, 0x04, 0xb4, 0x47, 0x68, 0x62, 0xbc, 0x67,
	0x36, 0xd1, 0x74, 0x18, 0xa0, 0x0e, 0x86, 0xfa, 0xf2, 0x96, 0xc4, 0xe8, 0xce, 0xbc, 0x25, 0x7d,
	0xc4, 0xab, 0x83, 0xff, 0x3b, 0xc3, 0xb9, 0x2d, 0x0c, 0xa8, 0xe1, 0x58, 0xe2, 0xa9, 0x5c, 0x78,
	0x6b, 0x32, 0x8e, 0x07, 0xbe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x35, 0xb9, 0xd8, 0x1c, 0x1d,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZetaSqlLocalServiceClient is the client API for ZetaSqlLocalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZetaSqlLocalServiceClient interface {
	Prepare(ctx context.Context, in *PrepareRequest, opts ...grpc.CallOption) (*PrepareResponse, error)
	Evaluate(ctx context.Context, in *EvaluateRequest, opts ...grpc.CallOption) (*EvaluateResponse, error)
	EvaluateStream(ctx context.Context, opts ...grpc.CallOption) (ZetaSqlLocalService_EvaluateStreamClient, error)
	Unprepare(ctx context.Context, in *UnprepareRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetTableFromProto(ctx context.Context, in *TableFromProtoRequest, opts ...grpc.CallOption) (*simple_tablepb.SimpleTableProto, error)
	RegisterCatalog(ctx context.Context, in *RegisterCatalogRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	RegisterParseResumeLocation(ctx context.Context, in *parse_resume_locationpb.ParseResumeLocationProto, opts ...grpc.CallOption) (*RegisterResponse, error)
	Analyze(ctx context.Context, in *AnalyzeRequest, opts ...grpc.CallOption) (*AnalyzeResponse, error)
	BuildSql(ctx context.Context, in *BuildSqlRequest, opts ...grpc.CallOption) (*BuildSqlResponse, error)
	ExtractTableNamesFromStatement(ctx context.Context, in *ExtractTableNamesFromStatementRequest, opts ...grpc.CallOption) (*ExtractTableNamesFromStatementResponse, error)
	ExtractTableNamesFromNextStatement(ctx context.Context, in *ExtractTableNamesFromNextStatementRequest, opts ...grpc.CallOption) (*ExtractTableNamesFromNextStatementResponse, error)
	FormatSql(ctx context.Context, in *FormatSqlRequest, opts ...grpc.CallOption) (*FormatSqlResponse, error)
	LenientFormatSql(ctx context.Context, in *FormatSqlRequest, opts ...grpc.CallOption) (*FormatSqlResponse, error)
	UnregisterCatalog(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UnregisterParseResumeLocation(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetBuiltinFunctions(ctx context.Context, in *optionspb.ZetaSQLBuiltinFunctionOptionsProto, opts ...grpc.CallOption) (*GetBuiltinFunctionsResponse, error)
	AddSimpleTable(ctx context.Context, in *AddSimpleTableRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetLanguageOptions(ctx context.Context, in *LanguageOptionsRequest, opts ...grpc.CallOption) (*optionspb.LanguageOptionsProto, error)
	GetAnalyzerOptions(ctx context.Context, in *AnalyzerOptionsRequest, opts ...grpc.CallOption) (*optionspb.AnalyzerOptionsProto, error)
}

type zetaSqlLocalServiceClient struct {
	cc *grpc.ClientConn
}

func NewZetaSqlLocalServiceClient(cc *grpc.ClientConn) ZetaSqlLocalServiceClient {
	return &zetaSqlLocalServiceClient{cc}
}

func (c *zetaSqlLocalServiceClient) Prepare(ctx context.Context, in *PrepareRequest, opts ...grpc.CallOption) (*PrepareResponse, error) {
	out := new(PrepareResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/Prepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) Evaluate(ctx context.Context, in *EvaluateRequest, opts ...grpc.CallOption) (*EvaluateResponse, error) {
	out := new(EvaluateResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/Evaluate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) EvaluateStream(ctx context.Context, opts ...grpc.CallOption) (ZetaSqlLocalService_EvaluateStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ZetaSqlLocalService_serviceDesc.Streams[0], "/zetasql.local_service.ZetaSqlLocalService/EvaluateStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &zetaSqlLocalServiceEvaluateStreamClient{stream}
	return x, nil
}

type ZetaSqlLocalService_EvaluateStreamClient interface {
	Send(*EvaluateRequestBatch) error
	Recv() (*EvaluateResponseBatch, error)
	grpc.ClientStream
}

type zetaSqlLocalServiceEvaluateStreamClient struct {
	grpc.ClientStream
}

func (x *zetaSqlLocalServiceEvaluateStreamClient) Send(m *EvaluateRequestBatch) error {
	return x.ClientStream.SendMsg(m)
}

func (x *zetaSqlLocalServiceEvaluateStreamClient) Recv() (*EvaluateResponseBatch, error) {
	m := new(EvaluateResponseBatch)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *zetaSqlLocalServiceClient) Unprepare(ctx context.Context, in *UnprepareRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/Unprepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) GetTableFromProto(ctx context.Context, in *TableFromProtoRequest, opts ...grpc.CallOption) (*simple_tablepb.SimpleTableProto, error) {
	out := new(simple_tablepb.SimpleTableProto)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/GetTableFromProto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) RegisterCatalog(ctx context.Context, in *RegisterCatalogRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/RegisterCatalog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) RegisterParseResumeLocation(ctx context.Context, in *parse_resume_locationpb.ParseResumeLocationProto, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/RegisterParseResumeLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) Analyze(ctx context.Context, in *AnalyzeRequest, opts ...grpc.CallOption) (*AnalyzeResponse, error) {
	out := new(AnalyzeResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/Analyze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) BuildSql(ctx context.Context, in *BuildSqlRequest, opts ...grpc.CallOption) (*BuildSqlResponse, error) {
	out := new(BuildSqlResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/BuildSql", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) ExtractTableNamesFromStatement(ctx context.Context, in *ExtractTableNamesFromStatementRequest, opts ...grpc.CallOption) (*ExtractTableNamesFromStatementResponse, error) {
	out := new(ExtractTableNamesFromStatementResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/ExtractTableNamesFromStatement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) ExtractTableNamesFromNextStatement(ctx context.Context, in *ExtractTableNamesFromNextStatementRequest, opts ...grpc.CallOption) (*ExtractTableNamesFromNextStatementResponse, error) {
	out := new(ExtractTableNamesFromNextStatementResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/ExtractTableNamesFromNextStatement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) FormatSql(ctx context.Context, in *FormatSqlRequest, opts ...grpc.CallOption) (*FormatSqlResponse, error) {
	out := new(FormatSqlResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/FormatSql", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) LenientFormatSql(ctx context.Context, in *FormatSqlRequest, opts ...grpc.CallOption) (*FormatSqlResponse, error) {
	out := new(FormatSqlResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/LenientFormatSql", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) UnregisterCatalog(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/UnregisterCatalog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) UnregisterParseResumeLocation(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/UnregisterParseResumeLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) GetBuiltinFunctions(ctx context.Context, in *optionspb.ZetaSQLBuiltinFunctionOptionsProto, opts ...grpc.CallOption) (*GetBuiltinFunctionsResponse, error) {
	out := new(GetBuiltinFunctionsResponse)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/GetBuiltinFunctions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) AddSimpleTable(ctx context.Context, in *AddSimpleTableRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/AddSimpleTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) GetLanguageOptions(ctx context.Context, in *LanguageOptionsRequest, opts ...grpc.CallOption) (*optionspb.LanguageOptionsProto, error) {
	out := new(optionspb.LanguageOptionsProto)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/GetLanguageOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zetaSqlLocalServiceClient) GetAnalyzerOptions(ctx context.Context, in *AnalyzerOptionsRequest, opts ...grpc.CallOption) (*optionspb.AnalyzerOptionsProto, error) {
	out := new(optionspb.AnalyzerOptionsProto)
	err := c.cc.Invoke(ctx, "/zetasql.local_service.ZetaSqlLocalService/GetAnalyzerOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZetaSqlLocalServiceServer is the server API for ZetaSqlLocalService service.
type ZetaSqlLocalServiceServer interface {
	Prepare(context.Context, *PrepareRequest) (*PrepareResponse, error)
	Evaluate(context.Context, *EvaluateRequest) (*EvaluateResponse, error)
	EvaluateStream(ZetaSqlLocalService_EvaluateStreamServer) error
	Unprepare(context.Context, *UnprepareRequest) (*empty.Empty, error)
	GetTableFromProto(context.Context, *TableFromProtoRequest) (*simple_tablepb.SimpleTableProto, error)
	RegisterCatalog(context.Context, *RegisterCatalogRequest) (*RegisterResponse, error)
	RegisterParseResumeLocation(context.Context, *parse_resume_locationpb.ParseResumeLocationProto) (*RegisterResponse, error)
	Analyze(context.Context, *AnalyzeRequest) (*AnalyzeResponse, error)
	BuildSql(context.Context, *BuildSqlRequest) (*BuildSqlResponse, error)
	ExtractTableNamesFromStatement(context.Context, *ExtractTableNamesFromStatementRequest) (*ExtractTableNamesFromStatementResponse, error)
	ExtractTableNamesFromNextStatement(context.Context, *ExtractTableNamesFromNextStatementRequest) (*ExtractTableNamesFromNextStatementResponse, error)
	FormatSql(context.Context, *FormatSqlRequest) (*FormatSqlResponse, error)
	LenientFormatSql(context.Context, *FormatSqlRequest) (*FormatSqlResponse, error)
	UnregisterCatalog(context.Context, *UnregisterRequest) (*empty.Empty, error)
	UnregisterParseResumeLocation(context.Context, *UnregisterRequest) (*empty.Empty, error)
	GetBuiltinFunctions(context.Context, *optionspb.ZetaSQLBuiltinFunctionOptionsProto) (*GetBuiltinFunctionsResponse, error)
	AddSimpleTable(context.Context, *AddSimpleTableRequest) (*empty.Empty, error)
	GetLanguageOptions(context.Context, *LanguageOptionsRequest) (*optionspb.LanguageOptionsProto, error)
	GetAnalyzerOptions(context.Context, *AnalyzerOptionsRequest) (*optionspb.AnalyzerOptionsProto, error)
}

func RegisterZetaSqlLocalServiceServer(s *grpc.Server, srv ZetaSqlLocalServiceServer) {
	s.RegisterService(&_ZetaSqlLocalService_serviceDesc, srv)
}

func _ZetaSqlLocalService_Prepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).Prepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/Prepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).Prepare(ctx, req.(*PrepareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_Evaluate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvaluateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).Evaluate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/Evaluate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).Evaluate(ctx, req.(*EvaluateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_EvaluateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ZetaSqlLocalServiceServer).EvaluateStream(&zetaSqlLocalServiceEvaluateStreamServer{stream})
}

type ZetaSqlLocalService_EvaluateStreamServer interface {
	Send(*EvaluateResponseBatch) error
	Recv() (*EvaluateRequestBatch, error)
	grpc.ServerStream
}

type zetaSqlLocalServiceEvaluateStreamServer struct {
	grpc.ServerStream
}

func (x *zetaSqlLocalServiceEvaluateStreamServer) Send(m *EvaluateResponseBatch) error {
	return x.ServerStream.SendMsg(m)
}

func (x *zetaSqlLocalServiceEvaluateStreamServer) Recv() (*EvaluateRequestBatch, error) {
	m := new(EvaluateRequestBatch)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ZetaSqlLocalService_Unprepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnprepareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).Unprepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/Unprepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).Unprepare(ctx, req.(*UnprepareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_GetTableFromProto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableFromProtoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).GetTableFromProto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/GetTableFromProto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).GetTableFromProto(ctx, req.(*TableFromProtoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_RegisterCatalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterCatalogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).RegisterCatalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/RegisterCatalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).RegisterCatalog(ctx, req.(*RegisterCatalogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_RegisterParseResumeLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(parse_resume_locationpb.ParseResumeLocationProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).RegisterParseResumeLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/RegisterParseResumeLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).RegisterParseResumeLocation(ctx, req.(*parse_resume_locationpb.ParseResumeLocationProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_Analyze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnalyzeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).Analyze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/Analyze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).Analyze(ctx, req.(*AnalyzeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_BuildSql_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildSqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).BuildSql(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/BuildSql",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).BuildSql(ctx, req.(*BuildSqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_ExtractTableNamesFromStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExtractTableNamesFromStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).ExtractTableNamesFromStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/ExtractTableNamesFromStatement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).ExtractTableNamesFromStatement(ctx, req.(*ExtractTableNamesFromStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_ExtractTableNamesFromNextStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExtractTableNamesFromNextStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).ExtractTableNamesFromNextStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/ExtractTableNamesFromNextStatement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).ExtractTableNamesFromNextStatement(ctx, req.(*ExtractTableNamesFromNextStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_FormatSql_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormatSqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).FormatSql(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/FormatSql",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).FormatSql(ctx, req.(*FormatSqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_LenientFormatSql_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FormatSqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).LenientFormatSql(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/LenientFormatSql",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).LenientFormatSql(ctx, req.(*FormatSqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_UnregisterCatalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).UnregisterCatalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/UnregisterCatalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).UnregisterCatalog(ctx, req.(*UnregisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_UnregisterParseResumeLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).UnregisterParseResumeLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/UnregisterParseResumeLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).UnregisterParseResumeLocation(ctx, req.(*UnregisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_GetBuiltinFunctions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(optionspb.ZetaSQLBuiltinFunctionOptionsProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).GetBuiltinFunctions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/GetBuiltinFunctions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).GetBuiltinFunctions(ctx, req.(*optionspb.ZetaSQLBuiltinFunctionOptionsProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_AddSimpleTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSimpleTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).AddSimpleTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/AddSimpleTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).AddSimpleTable(ctx, req.(*AddSimpleTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_GetLanguageOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LanguageOptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).GetLanguageOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/GetLanguageOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).GetLanguageOptions(ctx, req.(*LanguageOptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZetaSqlLocalService_GetAnalyzerOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnalyzerOptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZetaSqlLocalServiceServer).GetAnalyzerOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zetasql.local_service.ZetaSqlLocalService/GetAnalyzerOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZetaSqlLocalServiceServer).GetAnalyzerOptions(ctx, req.(*AnalyzerOptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZetaSqlLocalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zetasql.local_service.ZetaSqlLocalService",
	HandlerType: (*ZetaSqlLocalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Prepare",
			Handler:    _ZetaSqlLocalService_Prepare_Handler,
		},
		{
			MethodName: "Evaluate",
			Handler:    _ZetaSqlLocalService_Evaluate_Handler,
		},
		{
			MethodName: "Unprepare",
			Handler:    _ZetaSqlLocalService_Unprepare_Handler,
		},
		{
			MethodName: "GetTableFromProto",
			Handler:    _ZetaSqlLocalService_GetTableFromProto_Handler,
		},
		{
			MethodName: "RegisterCatalog",
			Handler:    _ZetaSqlLocalService_RegisterCatalog_Handler,
		},
		{
			MethodName: "RegisterParseResumeLocation",
			Handler:    _ZetaSqlLocalService_RegisterParseResumeLocation_Handler,
		},
		{
			MethodName: "Analyze",
			Handler:    _ZetaSqlLocalService_Analyze_Handler,
		},
		{
			MethodName: "BuildSql",
			Handler:    _ZetaSqlLocalService_BuildSql_Handler,
		},
		{
			MethodName: "ExtractTableNamesFromStatement",
			Handler:    _ZetaSqlLocalService_ExtractTableNamesFromStatement_Handler,
		},
		{
			MethodName: "ExtractTableNamesFromNextStatement",
			Handler:    _ZetaSqlLocalService_ExtractTableNamesFromNextStatement_Handler,
		},
		{
			MethodName: "FormatSql",
			Handler:    _ZetaSqlLocalService_FormatSql_Handler,
		},
		{
			MethodName: "LenientFormatSql",
			Handler:    _ZetaSqlLocalService_LenientFormatSql_Handler,
		},
		{
			MethodName: "UnregisterCatalog",
			Handler:    _ZetaSqlLocalService_UnregisterCatalog_Handler,
		},
		{
			MethodName: "UnregisterParseResumeLocation",
			Handler:    _ZetaSqlLocalService_UnregisterParseResumeLocation_Handler,
		},
		{
			MethodName: "GetBuiltinFunctions",
			Handler:    _ZetaSqlLocalService_GetBuiltinFunctions_Handler,
		},
		{
			MethodName: "AddSimpleTable",
			Handler:    _ZetaSqlLocalService_AddSimpleTable_Handler,
		},
		{
			MethodName: "GetLanguageOptions",
			Handler:    _ZetaSqlLocalService_GetLanguageOptions_Handler,
		},
		{
			MethodName: "GetAnalyzerOptions",
			Handler:    _ZetaSqlLocalService_GetAnalyzerOptions_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EvaluateStream",
			Handler:       _ZetaSqlLocalService_EvaluateStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "zetasql/local_service/local_service.proto",
}
