// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zetasql/proto/simple_catalog.proto

package zetasql

import (
	fmt "fmt"
	functionpb "github.com/apstndb/go-zetasql-genproto/zetasql/proto/functionpb"
	optionspb "github.com/apstndb/go-zetasql-genproto/zetasql/proto/optionspb"
	simple_constantpb "github.com/apstndb/go-zetasql-genproto/zetasql/public/simple_constantpb"
	simple_tablepb "github.com/apstndb/go-zetasql-genproto/zetasql/public/simple_tablepb"
	typepb "github.com/apstndb/go-zetasql-genproto/zetasql/public/typepb"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SimpleCatalogProto struct {
	Name                   *string                                       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Table                  []*simple_tablepb.SimpleTableProto            `protobuf:"bytes,2,rep,name=table" json:"table,omitempty"`
	NamedType              []*SimpleCatalogProto_NamedTypeProto          `protobuf:"bytes,3,rep,name=named_type,json=namedType" json:"named_type,omitempty"`
	Catalog                []*SimpleCatalogProto                         `protobuf:"bytes,4,rep,name=catalog" json:"catalog,omitempty"`
	BuiltinFunctionOptions *optionspb.ZetaSQLBuiltinFunctionOptionsProto `protobuf:"bytes,5,opt,name=builtin_function_options,json=builtinFunctionOptions" json:"builtin_function_options,omitempty"`
	CustomFunction         []*functionpb.FunctionProto                   `protobuf:"bytes,6,rep,name=custom_function,json=customFunction" json:"custom_function,omitempty"`
	CustomTvf              []*functionpb.TableValuedFunctionProto        `protobuf:"bytes,9,rep,name=custom_tvf,json=customTvf" json:"custom_tvf,omitempty"`
	FileDescriptorSetIndex *int32                                        `protobuf:"varint,7,opt,name=file_descriptor_set_index,json=fileDescriptorSetIndex,def=-1" json:"file_descriptor_set_index,omitempty"`
	Procedure              []*functionpb.ProcedureProto                  `protobuf:"bytes,8,rep,name=procedure" json:"procedure,omitempty"`
	Constant               []*simple_constantpb.SimpleConstantProto      `protobuf:"bytes,10,rep,name=constant" json:"constant,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                      `json:"-"`
	XXX_unrecognized       []byte                                        `json:"-"`
	XXX_sizecache          int32                                         `json:"-"`
}

func (m *SimpleCatalogProto) Reset()         { *m = SimpleCatalogProto{} }
func (m *SimpleCatalogProto) String() string { return proto.CompactTextString(m) }
func (*SimpleCatalogProto) ProtoMessage()    {}
func (*SimpleCatalogProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_03480a900067a3bf, []int{0}
}

func (m *SimpleCatalogProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleCatalogProto.Unmarshal(m, b)
}
func (m *SimpleCatalogProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleCatalogProto.Marshal(b, m, deterministic)
}
func (m *SimpleCatalogProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleCatalogProto.Merge(m, src)
}
func (m *SimpleCatalogProto) XXX_Size() int {
	return xxx_messageInfo_SimpleCatalogProto.Size(m)
}
func (m *SimpleCatalogProto) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleCatalogProto.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleCatalogProto proto.InternalMessageInfo

const Default_SimpleCatalogProto_FileDescriptorSetIndex int32 = -1

func (m *SimpleCatalogProto) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SimpleCatalogProto) GetTable() []*simple_tablepb.SimpleTableProto {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *SimpleCatalogProto) GetNamedType() []*SimpleCatalogProto_NamedTypeProto {
	if m != nil {
		return m.NamedType
	}
	return nil
}

func (m *SimpleCatalogProto) GetCatalog() []*SimpleCatalogProto {
	if m != nil {
		return m.Catalog
	}
	return nil
}

func (m *SimpleCatalogProto) GetBuiltinFunctionOptions() *optionspb.ZetaSQLBuiltinFunctionOptionsProto {
	if m != nil {
		return m.BuiltinFunctionOptions
	}
	return nil
}

func (m *SimpleCatalogProto) GetCustomFunction() []*functionpb.FunctionProto {
	if m != nil {
		return m.CustomFunction
	}
	return nil
}

func (m *SimpleCatalogProto) GetCustomTvf() []*functionpb.TableValuedFunctionProto {
	if m != nil {
		return m.CustomTvf
	}
	return nil
}

func (m *SimpleCatalogProto) GetFileDescriptorSetIndex() int32 {
	if m != nil && m.FileDescriptorSetIndex != nil {
		return *m.FileDescriptorSetIndex
	}
	return Default_SimpleCatalogProto_FileDescriptorSetIndex
}

func (m *SimpleCatalogProto) GetProcedure() []*functionpb.ProcedureProto {
	if m != nil {
		return m.Procedure
	}
	return nil
}

func (m *SimpleCatalogProto) GetConstant() []*simple_constantpb.SimpleConstantProto {
	if m != nil {
		return m.Constant
	}
	return nil
}

type SimpleCatalogProto_NamedTypeProto struct {
	Name                 *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type                 *typepb.TypeProto `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SimpleCatalogProto_NamedTypeProto) Reset()         { *m = SimpleCatalogProto_NamedTypeProto{} }
func (m *SimpleCatalogProto_NamedTypeProto) String() string { return proto.CompactTextString(m) }
func (*SimpleCatalogProto_NamedTypeProto) ProtoMessage()    {}
func (*SimpleCatalogProto_NamedTypeProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_03480a900067a3bf, []int{0, 0}
}

func (m *SimpleCatalogProto_NamedTypeProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleCatalogProto_NamedTypeProto.Unmarshal(m, b)
}
func (m *SimpleCatalogProto_NamedTypeProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleCatalogProto_NamedTypeProto.Marshal(b, m, deterministic)
}
func (m *SimpleCatalogProto_NamedTypeProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleCatalogProto_NamedTypeProto.Merge(m, src)
}
func (m *SimpleCatalogProto_NamedTypeProto) XXX_Size() int {
	return xxx_messageInfo_SimpleCatalogProto_NamedTypeProto.Size(m)
}
func (m *SimpleCatalogProto_NamedTypeProto) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleCatalogProto_NamedTypeProto.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleCatalogProto_NamedTypeProto proto.InternalMessageInfo

func (m *SimpleCatalogProto_NamedTypeProto) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SimpleCatalogProto_NamedTypeProto) GetType() *typepb.TypeProto {
	if m != nil {
		return m.Type
	}
	return nil
}

func init() {
	proto.RegisterType((*SimpleCatalogProto)(nil), "zetasql.SimpleCatalogProto")
	proto.RegisterType((*SimpleCatalogProto_NamedTypeProto)(nil), "zetasql.SimpleCatalogProto.NamedTypeProto")
}

func init() { proto.RegisterFile("zetasql/proto/simple_catalog.proto", fileDescriptor_03480a900067a3bf) }

var fileDescriptor_03480a900067a3bf = []byte{
	// 454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x5f, 0x6b, 0x13, 0x41,
	0x14, 0xc5, 0x49, 0x9a, 0x98, 0xee, 0x2d, 0x54, 0x18, 0x21, 0x4e, 0xd2, 0x3e, 0xa4, 0x45, 0x24,
	0x2a, 0x6e, 0xb0, 0x50, 0x10, 0x41, 0x94, 0x28, 0x42, 0xa1, 0x68, 0x4d, 0x82, 0x0f, 0xbe, 0x2c,
	0x93, 0xdd, 0x49, 0x18, 0x98, 0xcc, 0xac, 0x3b, 0xb3, 0xc5, 0xfa, 0xf5, 0xfc, 0x62, 0xb2, 0x77,
	0xfe, 0x68, 0x62, 0xe8, 0xdb, 0xee, 0x9c, 0xdf, 0x39, 0x67, 0xb8, 0x73, 0xe1, 0xfc, 0x17, 0xb7,
	0xcc, 0xfc, 0x90, 0x93, 0xb2, 0xd2, 0x56, 0x4f, 0x8c, 0xd8, 0x94, 0x92, 0x67, 0x39, 0xb3, 0x4c,
	0xea, 0x75, 0x8a, 0x87, 0xa4, 0xe7, 0x99, 0xe1, 0xe9, 0x36, 0xbc, 0xaa, 0x55, 0x6e, 0x85, 0x56,
	0x0e, 0x1b, 0x9e, 0x6c, 0xab, 0xba, 0x6c, 0x34, 0xe3, 0xc5, 0x27, 0x51, 0xac, 0x97, 0x52, 0xe4,
	0xb1, 0x48, 0x2b, 0x63, 0x99, 0xb2, 0x9e, 0x3a, 0xdb, 0x4f, 0x59, 0xb6, 0x94, 0xdc, 0x23, 0x83,
	0x1d, 0xc4, 0xde, 0x95, 0x5e, 0x3a, 0xff, 0xdd, 0x05, 0x32, 0x47, 0xc7, 0x07, 0x77, 0xff, 0x1b,
	0xbc, 0x3e, 0x81, 0x8e, 0x62, 0x1b, 0x4e, 0x5b, 0xa3, 0xd6, 0x38, 0x99, 0xe1, 0x37, 0x99, 0x40,
	0x17, 0x43, 0x69, 0x7b, 0x74, 0x30, 0x3e, 0xba, 0x18, 0xa4, 0x3e, 0x35, 0x75, 0xfe, 0x45, 0xa3,
	0xa1, 0x7b, 0xe6, 0x38, 0x72, 0x05, 0xd0, 0x18, 0x8b, 0xac, 0xe9, 0xa3, 0x07, 0xe8, 0x7a, 0xbe,
	0xe3, 0xfa, 0xb7, 0x35, 0xfd, 0xdc, 0xd0, 0x8b, 0xbb, 0xd2, 0xc7, 0x24, 0x2a, 0xfc, 0x93, 0x4b,
	0xe8, 0xf9, 0xf9, 0xd2, 0x0e, 0xe6, 0x9c, 0xdc, 0x93, 0x33, 0x0b, 0x2c, 0xe1, 0x40, 0x97, 0xb5,
	0x90, 0x56, 0xa8, 0x2c, 0x0c, 0x3e, 0xf3, 0x33, 0xa6, 0xdd, 0x51, 0x6b, 0x7c, 0x74, 0xf1, 0x22,
	0xe6, 0x7c, 0xe7, 0x96, 0xcd, 0xbf, 0x5e, 0x4f, 0x1d, 0xff, 0xc9, 0xe3, 0x5f, 0x1c, 0xed, 0x72,
	0xfb, 0xcb, 0xbd, 0x22, 0x79, 0x07, 0x0f, 0xf3, 0xda, 0x58, 0xbd, 0x89, 0x2d, 0xf4, 0x01, 0xde,
	0xb2, 0x1f, 0xd3, 0x83, 0xc5, 0x05, 0x1d, 0x3b, 0x3c, 0x1c, 0x92, 0xf7, 0x00, 0x3e, 0xc0, 0xde,
	0xae, 0x68, 0x82, 0xde, 0xb3, 0xe8, 0xc5, 0xc9, 0x7e, 0x63, 0xb2, 0xe6, 0xc5, 0x76, 0x4c, 0xe2,
	0x4c, 0x8b, 0xdb, 0x15, 0x79, 0x0b, 0x83, 0x95, 0x90, 0x3c, 0x2b, 0xb8, 0xc9, 0x2b, 0x51, 0x5a,
	0x5d, 0x65, 0x86, 0xdb, 0x4c, 0xa8, 0x82, 0xff, 0xa4, 0xbd, 0x51, 0x6b, 0xdc, 0x7d, 0xd3, 0x7e,
	0xf9, 0x6a, 0xd6, 0x6f, 0xa0, 0x8f, 0x91, 0x99, 0x73, 0x7b, 0xd5, 0x10, 0xe4, 0x12, 0x92, 0xb2,
	0xd2, 0x39, 0x2f, 0xea, 0x8a, 0xd3, 0x43, 0xec, 0x7f, 0x1c, 0xfb, 0x6f, 0x82, 0xe2, 0x5b, 0x23,
	0x49, 0x5e, 0xc3, 0x61, 0xd8, 0x46, 0x0a, 0xe8, 0x3a, 0xdd, 0x7d, 0x17, 0x2f, 0x3b, 0x6b, 0xa4,
	0x87, 0xd7, 0x70, 0xbc, 0xfd, 0xda, 0x7b, 0x57, 0xee, 0x29, 0x74, 0x70, 0x77, 0xda, 0xf8, 0x56,
	0xe4, 0xef, 0x44, 0xe2, 0x8e, 0xa0, 0x3e, 0x7d, 0x06, 0x24, 0xd7, 0x9b, 0x74, 0xad, 0xf5, 0x5a,
	0xf2, 0x40, 0x4d, 0x1f, 0xfd, 0xbf, 0x1a, 0xe6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x3d,
	0xe1, 0x28, 0xbd, 0x03, 0x00, 0x00,
}
