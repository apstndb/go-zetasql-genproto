// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zetasql/public/options.proto

package zetasql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LanguageVersion int32

const (
	LanguageVersion_VERSION_CURRENT                                 LanguageVersion = 1
	LanguageVersion_VERSION_1_0                                     LanguageVersion = 10000
	LanguageVersion_VERSION_1_1                                     LanguageVersion = 11000
	LanguageVersion_VERSION_1_2                                     LanguageVersion = 12000
	LanguageVersion_VERSION_1_3                                     LanguageVersion = 13000
	LanguageVersion___LanguageVersion__switch_must_have_a_default__ LanguageVersion = -1
)

var LanguageVersion_name = map[int32]string{
	1:     "VERSION_CURRENT",
	10000: "VERSION_1_0",
	11000: "VERSION_1_1",
	12000: "VERSION_1_2",
	13000: "VERSION_1_3",
	-1:    "__LanguageVersion__switch_must_have_a_default__",
}

var LanguageVersion_value = map[string]int32{
	"VERSION_CURRENT": 1,
	"VERSION_1_0":     10000,
	"VERSION_1_1":     11000,
	"VERSION_1_2":     12000,
	"VERSION_1_3":     13000,
	"__LanguageVersion__switch_must_have_a_default__": -1,
}

func (x LanguageVersion) Enum() *LanguageVersion {
	p := new(LanguageVersion)
	*p = x
	return p
}

func (x LanguageVersion) String() string {
	return proto.EnumName(LanguageVersion_name, int32(x))
}

func (x *LanguageVersion) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LanguageVersion_value, data, "LanguageVersion")
	if err != nil {
		return err
	}
	*x = LanguageVersion(value)
	return nil
}

func (LanguageVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{0}
}

type LanguageFeature int32

const (
	LanguageFeature_FEATURE_ANALYTIC_FUNCTIONS                            LanguageFeature = 1
	LanguageFeature_FEATURE_TABLESAMPLE                                   LanguageFeature = 2
	LanguageFeature_FEATURE_DISALLOW_GROUP_BY_FLOAT                       LanguageFeature = 3
	LanguageFeature_FEATURE_TIMESTAMP_NANOS                               LanguageFeature = 5
	LanguageFeature_FEATURE_DML_UPDATE_WITH_JOIN                          LanguageFeature = 6
	LanguageFeature_FEATURE_TABLE_VALUED_FUNCTIONS                        LanguageFeature = 8
	LanguageFeature_FEATURE_CREATE_AGGREGATE_FUNCTION                     LanguageFeature = 9
	LanguageFeature_FEATURE_CREATE_TABLE_FUNCTION                         LanguageFeature = 10
	LanguageFeature_FEATURE_GROUP_BY_ROLLUP                               LanguageFeature = 12
	LanguageFeature_FEATURE_TEMPLATE_FUNCTIONS                            LanguageFeature = 13
	LanguageFeature_FEATURE_CREATE_TABLE_PARTITION_BY                     LanguageFeature = 14
	LanguageFeature_FEATURE_CREATE_TABLE_CLUSTER_BY                       LanguageFeature = 15
	LanguageFeature_FEATURE_NUMERIC_TYPE                                  LanguageFeature = 16
	LanguageFeature_FEATURE_CREATE_TABLE_NOT_NULL                         LanguageFeature = 17
	LanguageFeature_FEATURE_CREATE_TABLE_FIELD_ANNOTATIONS                LanguageFeature = 18
	LanguageFeature_FEATURE_CREATE_TABLE_AS_SELECT_COLUMN_LIST            LanguageFeature = 19
	LanguageFeature_FEATURE_DISALLOW_NULL_PRIMARY_KEYS                    LanguageFeature = 20
	LanguageFeature_FEATURE_DISALLOW_PRIMARY_KEY_UPDATES                  LanguageFeature = 21
	LanguageFeature_FEATURE_TABLESAMPLE_FROM_TABLE_VALUED_FUNCTIONS       LanguageFeature = 22
	LanguageFeature_FEATURE_ENCRYPTION                                    LanguageFeature = 23
	LanguageFeature_FEATURE_GEOGRAPHY                                     LanguageFeature = 25
	LanguageFeature_FEATURE_STRATIFIED_RESERVOIR_TABLESAMPLE              LanguageFeature = 26
	LanguageFeature_FEATURE_FOREIGN_KEYS                                  LanguageFeature = 27
	LanguageFeature_FEATURE_BETWEEN_UINT64_INT64                          LanguageFeature = 28
	LanguageFeature_FEATURE_CHECK_CONSTRAINT                              LanguageFeature = 29
	LanguageFeature_FEATURE_PARAMETERS_IN_GRANTEE_LIST                    LanguageFeature = 30
	LanguageFeature_FEATURE_NAMED_ARGUMENTS                               LanguageFeature = 31
	LanguageFeature_FEATURE_ALLOW_LEGACY_ROW_ACCESS_POLICY_SYNTAX         LanguageFeature = 32
	LanguageFeature_FEATURE_CREATE_MATERIALIZED_VIEW_PARTITION_BY         LanguageFeature = 33
	LanguageFeature_FEATURE_CREATE_MATERIALIZED_VIEW_CLUSTER_BY           LanguageFeature = 34
	LanguageFeature_FEATURE_CREATE_EXTERNAL_TABLE_WITH_TABLE_ELEMENT_LIST LanguageFeature = 35
	LanguageFeature_FEATURE_UNENFORCED_PRIMARY_KEYS                       LanguageFeature = 40
	LanguageFeature_FEATURE_BIGNUMERIC_TYPE                               LanguageFeature = 41
	LanguageFeature_FEATURE_EXTENDED_TYPES                                LanguageFeature = 42
	LanguageFeature_FEATURE_JSON_TYPE                                     LanguageFeature = 43
	LanguageFeature_FEATURE_JSON_NO_VALIDATION                            LanguageFeature = 44
	LanguageFeature_FEATURE_JSON_LEGACY_PARSE                             LanguageFeature = 46
	LanguageFeature_FEATURE_CREATE_EXTERNAL_TABLE_WITH_PARTITION_COLUMNS  LanguageFeature = 47
	LanguageFeature_FEATURE_NO_ADVANCED_NUMERIC_MATH_SIGNATURES           LanguageFeature = 48
	LanguageFeature_FEATURE_INTERVAL_TYPE                                 LanguageFeature = 49
	LanguageFeature_FEATURE_V_1_1_ORDER_BY_COLLATE                        LanguageFeature = 11001
	LanguageFeature_FEATURE_V_1_1_WITH_ON_SUBQUERY                        LanguageFeature = 11002
	LanguageFeature_FEATURE_V_1_1_SELECT_STAR_EXCEPT_REPLACE              LanguageFeature = 11003
	LanguageFeature_FEATURE_V_1_1_ORDER_BY_IN_AGGREGATE                   LanguageFeature = 11004
	LanguageFeature_FEATURE_V_1_1_CAST_DIFFERENT_ARRAY_TYPES              LanguageFeature = 11005
	LanguageFeature_FEATURE_V_1_1_ARRAY_EQUALITY                          LanguageFeature = 11006
	LanguageFeature_FEATURE_V_1_1_LIMIT_IN_AGGREGATE                      LanguageFeature = 11007
	LanguageFeature_FEATURE_V_1_1_HAVING_IN_AGGREGATE                     LanguageFeature = 11008
	LanguageFeature_FEATURE_V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC      LanguageFeature = 11009
	LanguageFeature_FEATURE_V_1_1_NULL_HANDLING_MODIFIER_IN_AGGREGATE     LanguageFeature = 11010
	LanguageFeature_FEATURE_V_1_1_FOR_SYSTEM_TIME_AS_OF                   LanguageFeature = 11011
	LanguageFeature_FEATURE_V_1_2_CIVIL_TIME                              LanguageFeature = 12001
	LanguageFeature_FEATURE_V_1_2_SAFE_FUNCTION_CALL                      LanguageFeature = 12002
	LanguageFeature_FEATURE_V_1_2_GROUP_BY_STRUCT                         LanguageFeature = 12003
	LanguageFeature_FEATURE_V_1_2_PROTO_EXTENSIONS_WITH_NEW               LanguageFeature = 12004
	LanguageFeature_FEATURE_V_1_2_GROUP_BY_ARRAY                          LanguageFeature = 12005
	LanguageFeature_FEATURE_V_1_2_PROTO_EXTENSIONS_WITH_SET               LanguageFeature = 12006
	LanguageFeature_FEATURE_V_1_2_CORRELATED_REFS_IN_NESTED_DML           LanguageFeature = 12007
	LanguageFeature_FEATURE_V_1_2_WEEK_WITH_WEEKDAY                       LanguageFeature = 12008
	LanguageFeature_FEATURE_V_1_2_ARRAY_ELEMENTS_WITH_SET                 LanguageFeature = 12009
	LanguageFeature_FEATURE_V_1_2_NESTED_UPDATE_DELETE_WITH_OFFSET        LanguageFeature = 12010
	LanguageFeature_FEATURE_V_1_2_GENERATED_COLUMNS                       LanguageFeature = 12011
	LanguageFeature_FEATURE_V_1_3_PROTO_DEFAULT_IF_NULL                   LanguageFeature = 13001
	LanguageFeature_FEATURE_V_1_3_EXTRACT_FROM_PROTO                      LanguageFeature = 13002
	LanguageFeature_FEATURE_V_1_3_DISALLOW_PROTO3_HAS_SCALAR_FIELD        LanguageFeature = 13003
	LanguageFeature_FEATURE_V_1_3_ARRAY_ORDERING                          LanguageFeature = 13004
	LanguageFeature_FEATURE_V_1_3_OMIT_INSERT_COLUMN_LIST                 LanguageFeature = 13005
	LanguageFeature_FEATURE_V_1_3_IGNORE_PROTO3_USE_DEFAULTS              LanguageFeature = 13006
	LanguageFeature_FEATURE_V_1_3_REPLACE_FIELDS                          LanguageFeature = 13007
	LanguageFeature_FEATURE_V_1_3_NULLS_FIRST_LAST_IN_ORDER_BY            LanguageFeature = 13008
	LanguageFeature_FEATURE_V_1_3_ALLOW_DASHES_IN_TABLE_NAME              LanguageFeature = 13009
	LanguageFeature_FEATURE_V_1_3_CONCAT_MIXED_TYPES                      LanguageFeature = 13010
	LanguageFeature_FEATURE_V_1_3_WITH_RECURSIVE                          LanguageFeature = 13011
	LanguageFeature_FEATURE_V_1_3_PROTO_MAPS                              LanguageFeature = 13012
	LanguageFeature_FEATURE_V_1_3_ENUM_VALUE_DESCRIPTOR_PROTO             LanguageFeature = 13013
	LanguageFeature_FEATURE_V_1_3_DECIMAL_ALIAS                           LanguageFeature = 13014
	LanguageFeature_FEATURE_V_1_3_UNNEST_AND_FLATTEN_ARRAYS               LanguageFeature = 13015
	LanguageFeature_FEATURE_V_1_3_ALLOW_CONSECUTIVE_ON                    LanguageFeature = 13016
	LanguageFeature_FEATURE_V_1_3_ALLOW_REGEXP_EXTRACT_OPTIONALS          LanguageFeature = 13017
	LanguageFeature_FEATURE_V_1_3_DATE_TIME_CONSTRUCTORS                  LanguageFeature = 13018
	LanguageFeature_FEATURE_V_1_3_DATE_ARITHMETICS                        LanguageFeature = 13019
	LanguageFeature_FEATURE_V_1_3_ADDITIONAL_STRING_FUNCTIONS             LanguageFeature = 13020
	LanguageFeature_FEATURE_V_1_3_WITH_GROUP_ROWS                         LanguageFeature = 13021
	LanguageFeature_FEATURE_V_1_3_EXTENDED_DATE_TIME_SIGNATURES           LanguageFeature = 13022
	LanguageFeature_FEATURE_V_1_3_EXTENDED_GEOGRAPHY_PARSERS              LanguageFeature = 13023
	LanguageFeature_FEATURE_V_1_3_INLINE_LAMBDA_ARGUMENT                  LanguageFeature = 13024
	LanguageFeature_FEATURE_EXPERIMENTAL_MODULES                          LanguageFeature = 999002
	LanguageFeature_FEATURE_TEST_IDEALLY_ENABLED_BUT_IN_DEVELOPMENT       LanguageFeature = 999991
	LanguageFeature_FEATURE_TEST_IDEALLY_DISABLED                         LanguageFeature = 999992
	LanguageFeature_FEATURE_TEST_IDEALLY_DISABLED_AND_IN_DEVELOPMENT      LanguageFeature = 999993
	LanguageFeature___LanguageFeature__switch_must_have_a_default__       LanguageFeature = -1
)

var LanguageFeature_name = map[int32]string{
	1:      "FEATURE_ANALYTIC_FUNCTIONS",
	2:      "FEATURE_TABLESAMPLE",
	3:      "FEATURE_DISALLOW_GROUP_BY_FLOAT",
	5:      "FEATURE_TIMESTAMP_NANOS",
	6:      "FEATURE_DML_UPDATE_WITH_JOIN",
	8:      "FEATURE_TABLE_VALUED_FUNCTIONS",
	9:      "FEATURE_CREATE_AGGREGATE_FUNCTION",
	10:     "FEATURE_CREATE_TABLE_FUNCTION",
	12:     "FEATURE_GROUP_BY_ROLLUP",
	13:     "FEATURE_TEMPLATE_FUNCTIONS",
	14:     "FEATURE_CREATE_TABLE_PARTITION_BY",
	15:     "FEATURE_CREATE_TABLE_CLUSTER_BY",
	16:     "FEATURE_NUMERIC_TYPE",
	17:     "FEATURE_CREATE_TABLE_NOT_NULL",
	18:     "FEATURE_CREATE_TABLE_FIELD_ANNOTATIONS",
	19:     "FEATURE_CREATE_TABLE_AS_SELECT_COLUMN_LIST",
	20:     "FEATURE_DISALLOW_NULL_PRIMARY_KEYS",
	21:     "FEATURE_DISALLOW_PRIMARY_KEY_UPDATES",
	22:     "FEATURE_TABLESAMPLE_FROM_TABLE_VALUED_FUNCTIONS",
	23:     "FEATURE_ENCRYPTION",
	25:     "FEATURE_GEOGRAPHY",
	26:     "FEATURE_STRATIFIED_RESERVOIR_TABLESAMPLE",
	27:     "FEATURE_FOREIGN_KEYS",
	28:     "FEATURE_BETWEEN_UINT64_INT64",
	29:     "FEATURE_CHECK_CONSTRAINT",
	30:     "FEATURE_PARAMETERS_IN_GRANTEE_LIST",
	31:     "FEATURE_NAMED_ARGUMENTS",
	32:     "FEATURE_ALLOW_LEGACY_ROW_ACCESS_POLICY_SYNTAX",
	33:     "FEATURE_CREATE_MATERIALIZED_VIEW_PARTITION_BY",
	34:     "FEATURE_CREATE_MATERIALIZED_VIEW_CLUSTER_BY",
	35:     "FEATURE_CREATE_EXTERNAL_TABLE_WITH_TABLE_ELEMENT_LIST",
	40:     "FEATURE_UNENFORCED_PRIMARY_KEYS",
	41:     "FEATURE_BIGNUMERIC_TYPE",
	42:     "FEATURE_EXTENDED_TYPES",
	43:     "FEATURE_JSON_TYPE",
	44:     "FEATURE_JSON_NO_VALIDATION",
	46:     "FEATURE_JSON_LEGACY_PARSE",
	47:     "FEATURE_CREATE_EXTERNAL_TABLE_WITH_PARTITION_COLUMNS",
	48:     "FEATURE_NO_ADVANCED_NUMERIC_MATH_SIGNATURES",
	49:     "FEATURE_INTERVAL_TYPE",
	11001:  "FEATURE_V_1_1_ORDER_BY_COLLATE",
	11002:  "FEATURE_V_1_1_WITH_ON_SUBQUERY",
	11003:  "FEATURE_V_1_1_SELECT_STAR_EXCEPT_REPLACE",
	11004:  "FEATURE_V_1_1_ORDER_BY_IN_AGGREGATE",
	11005:  "FEATURE_V_1_1_CAST_DIFFERENT_ARRAY_TYPES",
	11006:  "FEATURE_V_1_1_ARRAY_EQUALITY",
	11007:  "FEATURE_V_1_1_LIMIT_IN_AGGREGATE",
	11008:  "FEATURE_V_1_1_HAVING_IN_AGGREGATE",
	11009:  "FEATURE_V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC",
	11010:  "FEATURE_V_1_1_NULL_HANDLING_MODIFIER_IN_AGGREGATE",
	11011:  "FEATURE_V_1_1_FOR_SYSTEM_TIME_AS_OF",
	12001:  "FEATURE_V_1_2_CIVIL_TIME",
	12002:  "FEATURE_V_1_2_SAFE_FUNCTION_CALL",
	12003:  "FEATURE_V_1_2_GROUP_BY_STRUCT",
	12004:  "FEATURE_V_1_2_PROTO_EXTENSIONS_WITH_NEW",
	12005:  "FEATURE_V_1_2_GROUP_BY_ARRAY",
	12006:  "FEATURE_V_1_2_PROTO_EXTENSIONS_WITH_SET",
	12007:  "FEATURE_V_1_2_CORRELATED_REFS_IN_NESTED_DML",
	12008:  "FEATURE_V_1_2_WEEK_WITH_WEEKDAY",
	12009:  "FEATURE_V_1_2_ARRAY_ELEMENTS_WITH_SET",
	12010:  "FEATURE_V_1_2_NESTED_UPDATE_DELETE_WITH_OFFSET",
	12011:  "FEATURE_V_1_2_GENERATED_COLUMNS",
	13001:  "FEATURE_V_1_3_PROTO_DEFAULT_IF_NULL",
	13002:  "FEATURE_V_1_3_EXTRACT_FROM_PROTO",
	13003:  "FEATURE_V_1_3_DISALLOW_PROTO3_HAS_SCALAR_FIELD",
	13004:  "FEATURE_V_1_3_ARRAY_ORDERING",
	13005:  "FEATURE_V_1_3_OMIT_INSERT_COLUMN_LIST",
	13006:  "FEATURE_V_1_3_IGNORE_PROTO3_USE_DEFAULTS",
	13007:  "FEATURE_V_1_3_REPLACE_FIELDS",
	13008:  "FEATURE_V_1_3_NULLS_FIRST_LAST_IN_ORDER_BY",
	13009:  "FEATURE_V_1_3_ALLOW_DASHES_IN_TABLE_NAME",
	13010:  "FEATURE_V_1_3_CONCAT_MIXED_TYPES",
	13011:  "FEATURE_V_1_3_WITH_RECURSIVE",
	13012:  "FEATURE_V_1_3_PROTO_MAPS",
	13013:  "FEATURE_V_1_3_ENUM_VALUE_DESCRIPTOR_PROTO",
	13014:  "FEATURE_V_1_3_DECIMAL_ALIAS",
	13015:  "FEATURE_V_1_3_UNNEST_AND_FLATTEN_ARRAYS",
	13016:  "FEATURE_V_1_3_ALLOW_CONSECUTIVE_ON",
	13017:  "FEATURE_V_1_3_ALLOW_REGEXP_EXTRACT_OPTIONALS",
	13018:  "FEATURE_V_1_3_DATE_TIME_CONSTRUCTORS",
	13019:  "FEATURE_V_1_3_DATE_ARITHMETICS",
	13020:  "FEATURE_V_1_3_ADDITIONAL_STRING_FUNCTIONS",
	13021:  "FEATURE_V_1_3_WITH_GROUP_ROWS",
	13022:  "FEATURE_V_1_3_EXTENDED_DATE_TIME_SIGNATURES",
	13023:  "FEATURE_V_1_3_EXTENDED_GEOGRAPHY_PARSERS",
	13024:  "FEATURE_V_1_3_INLINE_LAMBDA_ARGUMENT",
	999002: "FEATURE_EXPERIMENTAL_MODULES",
	999991: "FEATURE_TEST_IDEALLY_ENABLED_BUT_IN_DEVELOPMENT",
	999992: "FEATURE_TEST_IDEALLY_DISABLED",
	999993: "FEATURE_TEST_IDEALLY_DISABLED_AND_IN_DEVELOPMENT",
	-1:     "__LanguageFeature__switch_must_have_a_default__",
}

var LanguageFeature_value = map[string]int32{
	"FEATURE_ANALYTIC_FUNCTIONS":                            1,
	"FEATURE_TABLESAMPLE":                                   2,
	"FEATURE_DISALLOW_GROUP_BY_FLOAT":                       3,
	"FEATURE_TIMESTAMP_NANOS":                               5,
	"FEATURE_DML_UPDATE_WITH_JOIN":                          6,
	"FEATURE_TABLE_VALUED_FUNCTIONS":                        8,
	"FEATURE_CREATE_AGGREGATE_FUNCTION":                     9,
	"FEATURE_CREATE_TABLE_FUNCTION":                         10,
	"FEATURE_GROUP_BY_ROLLUP":                               12,
	"FEATURE_TEMPLATE_FUNCTIONS":                            13,
	"FEATURE_CREATE_TABLE_PARTITION_BY":                     14,
	"FEATURE_CREATE_TABLE_CLUSTER_BY":                       15,
	"FEATURE_NUMERIC_TYPE":                                  16,
	"FEATURE_CREATE_TABLE_NOT_NULL":                         17,
	"FEATURE_CREATE_TABLE_FIELD_ANNOTATIONS":                18,
	"FEATURE_CREATE_TABLE_AS_SELECT_COLUMN_LIST":            19,
	"FEATURE_DISALLOW_NULL_PRIMARY_KEYS":                    20,
	"FEATURE_DISALLOW_PRIMARY_KEY_UPDATES":                  21,
	"FEATURE_TABLESAMPLE_FROM_TABLE_VALUED_FUNCTIONS":       22,
	"FEATURE_ENCRYPTION":                                    23,
	"FEATURE_GEOGRAPHY":                                     25,
	"FEATURE_STRATIFIED_RESERVOIR_TABLESAMPLE":              26,
	"FEATURE_FOREIGN_KEYS":                                  27,
	"FEATURE_BETWEEN_UINT64_INT64":                          28,
	"FEATURE_CHECK_CONSTRAINT":                              29,
	"FEATURE_PARAMETERS_IN_GRANTEE_LIST":                    30,
	"FEATURE_NAMED_ARGUMENTS":                               31,
	"FEATURE_ALLOW_LEGACY_ROW_ACCESS_POLICY_SYNTAX":         32,
	"FEATURE_CREATE_MATERIALIZED_VIEW_PARTITION_BY":         33,
	"FEATURE_CREATE_MATERIALIZED_VIEW_CLUSTER_BY":           34,
	"FEATURE_CREATE_EXTERNAL_TABLE_WITH_TABLE_ELEMENT_LIST": 35,
	"FEATURE_UNENFORCED_PRIMARY_KEYS":                       40,
	"FEATURE_BIGNUMERIC_TYPE":                               41,
	"FEATURE_EXTENDED_TYPES":                                42,
	"FEATURE_JSON_TYPE":                                     43,
	"FEATURE_JSON_NO_VALIDATION":                            44,
	"FEATURE_JSON_LEGACY_PARSE":                             46,
	"FEATURE_CREATE_EXTERNAL_TABLE_WITH_PARTITION_COLUMNS":  47,
	"FEATURE_NO_ADVANCED_NUMERIC_MATH_SIGNATURES":           48,
	"FEATURE_INTERVAL_TYPE":                                 49,
	"FEATURE_V_1_1_ORDER_BY_COLLATE":                        11001,
	"FEATURE_V_1_1_WITH_ON_SUBQUERY":                        11002,
	"FEATURE_V_1_1_SELECT_STAR_EXCEPT_REPLACE":              11003,
	"FEATURE_V_1_1_ORDER_BY_IN_AGGREGATE":                   11004,
	"FEATURE_V_1_1_CAST_DIFFERENT_ARRAY_TYPES":              11005,
	"FEATURE_V_1_1_ARRAY_EQUALITY":                          11006,
	"FEATURE_V_1_1_LIMIT_IN_AGGREGATE":                      11007,
	"FEATURE_V_1_1_HAVING_IN_AGGREGATE":                     11008,
	"FEATURE_V_1_1_NULL_HANDLING_MODIFIER_IN_ANALYTIC":      11009,
	"FEATURE_V_1_1_NULL_HANDLING_MODIFIER_IN_AGGREGATE":     11010,
	"FEATURE_V_1_1_FOR_SYSTEM_TIME_AS_OF":                   11011,
	"FEATURE_V_1_2_CIVIL_TIME":                              12001,
	"FEATURE_V_1_2_SAFE_FUNCTION_CALL":                      12002,
	"FEATURE_V_1_2_GROUP_BY_STRUCT":                         12003,
	"FEATURE_V_1_2_PROTO_EXTENSIONS_WITH_NEW":               12004,
	"FEATURE_V_1_2_GROUP_BY_ARRAY":                          12005,
	"FEATURE_V_1_2_PROTO_EXTENSIONS_WITH_SET":               12006,
	"FEATURE_V_1_2_CORRELATED_REFS_IN_NESTED_DML":           12007,
	"FEATURE_V_1_2_WEEK_WITH_WEEKDAY":                       12008,
	"FEATURE_V_1_2_ARRAY_ELEMENTS_WITH_SET":                 12009,
	"FEATURE_V_1_2_NESTED_UPDATE_DELETE_WITH_OFFSET":        12010,
	"FEATURE_V_1_2_GENERATED_COLUMNS":                       12011,
	"FEATURE_V_1_3_PROTO_DEFAULT_IF_NULL":                   13001,
	"FEATURE_V_1_3_EXTRACT_FROM_PROTO":                      13002,
	"FEATURE_V_1_3_DISALLOW_PROTO3_HAS_SCALAR_FIELD":        13003,
	"FEATURE_V_1_3_ARRAY_ORDERING":                          13004,
	"FEATURE_V_1_3_OMIT_INSERT_COLUMN_LIST":                 13005,
	"FEATURE_V_1_3_IGNORE_PROTO3_USE_DEFAULTS":              13006,
	"FEATURE_V_1_3_REPLACE_FIELDS":                          13007,
	"FEATURE_V_1_3_NULLS_FIRST_LAST_IN_ORDER_BY":            13008,
	"FEATURE_V_1_3_ALLOW_DASHES_IN_TABLE_NAME":              13009,
	"FEATURE_V_1_3_CONCAT_MIXED_TYPES":                      13010,
	"FEATURE_V_1_3_WITH_RECURSIVE":                          13011,
	"FEATURE_V_1_3_PROTO_MAPS":                              13012,
	"FEATURE_V_1_3_ENUM_VALUE_DESCRIPTOR_PROTO":             13013,
	"FEATURE_V_1_3_DECIMAL_ALIAS":                           13014,
	"FEATURE_V_1_3_UNNEST_AND_FLATTEN_ARRAYS":               13015,
	"FEATURE_V_1_3_ALLOW_CONSECUTIVE_ON":                    13016,
	"FEATURE_V_1_3_ALLOW_REGEXP_EXTRACT_OPTIONALS":          13017,
	"FEATURE_V_1_3_DATE_TIME_CONSTRUCTORS":                  13018,
	"FEATURE_V_1_3_DATE_ARITHMETICS":                        13019,
	"FEATURE_V_1_3_ADDITIONAL_STRING_FUNCTIONS":             13020,
	"FEATURE_V_1_3_WITH_GROUP_ROWS":                         13021,
	"FEATURE_V_1_3_EXTENDED_DATE_TIME_SIGNATURES":           13022,
	"FEATURE_V_1_3_EXTENDED_GEOGRAPHY_PARSERS":              13023,
	"FEATURE_V_1_3_INLINE_LAMBDA_ARGUMENT":                  13024,
	"FEATURE_EXPERIMENTAL_MODULES":                          999002,
	"FEATURE_TEST_IDEALLY_ENABLED_BUT_IN_DEVELOPMENT":       999991,
	"FEATURE_TEST_IDEALLY_DISABLED":                         999992,
	"FEATURE_TEST_IDEALLY_DISABLED_AND_IN_DEVELOPMENT":      999993,
	"__LanguageFeature__switch_must_have_a_default__":       -1,
}

func (x LanguageFeature) Enum() *LanguageFeature {
	p := new(LanguageFeature)
	*p = x
	return p
}

func (x LanguageFeature) String() string {
	return proto.EnumName(LanguageFeature_name, int32(x))
}

func (x *LanguageFeature) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LanguageFeature_value, data, "LanguageFeature")
	if err != nil {
		return err
	}
	*x = LanguageFeature(value)
	return nil
}

func (LanguageFeature) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{1}
}

type ResolvedASTRewrite int32

const (
	ResolvedASTRewrite_REWRITE_INVALID_DO_NOT_USE ResolvedASTRewrite = 0
	ResolvedASTRewrite_REWRITE_FLATTEN            ResolvedASTRewrite = 1
)

var ResolvedASTRewrite_name = map[int32]string{
	0: "REWRITE_INVALID_DO_NOT_USE",
	1: "REWRITE_FLATTEN",
}

var ResolvedASTRewrite_value = map[string]int32{
	"REWRITE_INVALID_DO_NOT_USE": 0,
	"REWRITE_FLATTEN":            1,
}

func (x ResolvedASTRewrite) Enum() *ResolvedASTRewrite {
	p := new(ResolvedASTRewrite)
	*p = x
	return p
}

func (x ResolvedASTRewrite) String() string {
	return proto.EnumName(ResolvedASTRewrite_name, int32(x))
}

func (x *ResolvedASTRewrite) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResolvedASTRewrite_value, data, "ResolvedASTRewrite")
	if err != nil {
		return err
	}
	*x = ResolvedASTRewrite(value)
	return nil
}

func (ResolvedASTRewrite) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{2}
}

type NameResolutionMode int32

const (
	NameResolutionMode_NAME_RESOLUTION_DEFAULT NameResolutionMode = 0
	NameResolutionMode_NAME_RESOLUTION_STRICT  NameResolutionMode = 1
)

var NameResolutionMode_name = map[int32]string{
	0: "NAME_RESOLUTION_DEFAULT",
	1: "NAME_RESOLUTION_STRICT",
}

var NameResolutionMode_value = map[string]int32{
	"NAME_RESOLUTION_DEFAULT": 0,
	"NAME_RESOLUTION_STRICT":  1,
}

func (x NameResolutionMode) Enum() *NameResolutionMode {
	p := new(NameResolutionMode)
	*p = x
	return p
}

func (x NameResolutionMode) String() string {
	return proto.EnumName(NameResolutionMode_name, int32(x))
}

func (x *NameResolutionMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NameResolutionMode_value, data, "NameResolutionMode")
	if err != nil {
		return err
	}
	*x = NameResolutionMode(value)
	return nil
}

func (NameResolutionMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{3}
}

type ProductMode int32

const (
	ProductMode_PRODUCT_INTERNAL ProductMode = 0
	ProductMode_PRODUCT_EXTERNAL ProductMode = 1
)

var ProductMode_name = map[int32]string{
	0: "PRODUCT_INTERNAL",
	1: "PRODUCT_EXTERNAL",
}

var ProductMode_value = map[string]int32{
	"PRODUCT_INTERNAL": 0,
	"PRODUCT_EXTERNAL": 1,
}

func (x ProductMode) Enum() *ProductMode {
	p := new(ProductMode)
	*p = x
	return p
}

func (x ProductMode) String() string {
	return proto.EnumName(ProductMode_name, int32(x))
}

func (x *ProductMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProductMode_value, data, "ProductMode")
	if err != nil {
		return err
	}
	*x = ProductMode(value)
	return nil
}

func (ProductMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{4}
}

type StatementContext int32

const (
	StatementContext_CONTEXT_DEFAULT StatementContext = 0
	StatementContext_CONTEXT_MODULE  StatementContext = 1
)

var StatementContext_name = map[int32]string{
	0: "CONTEXT_DEFAULT",
	1: "CONTEXT_MODULE",
}

var StatementContext_value = map[string]int32{
	"CONTEXT_DEFAULT": 0,
	"CONTEXT_MODULE":  1,
}

func (x StatementContext) Enum() *StatementContext {
	p := new(StatementContext)
	*p = x
	return p
}

func (x StatementContext) String() string {
	return proto.EnumName(StatementContext_name, int32(x))
}

func (x *StatementContext) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StatementContext_value, data, "StatementContext")
	if err != nil {
		return err
	}
	*x = StatementContext(value)
	return nil
}

func (StatementContext) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{5}
}

type ErrorMessageMode int32

const (
	ErrorMessageMode_ERROR_MESSAGE_WITH_PAYLOAD          ErrorMessageMode = 0
	ErrorMessageMode_ERROR_MESSAGE_ONE_LINE              ErrorMessageMode = 1
	ErrorMessageMode_ERROR_MESSAGE_MULTI_LINE_WITH_CARET ErrorMessageMode = 2
)

var ErrorMessageMode_name = map[int32]string{
	0: "ERROR_MESSAGE_WITH_PAYLOAD",
	1: "ERROR_MESSAGE_ONE_LINE",
	2: "ERROR_MESSAGE_MULTI_LINE_WITH_CARET",
}

var ErrorMessageMode_value = map[string]int32{
	"ERROR_MESSAGE_WITH_PAYLOAD":          0,
	"ERROR_MESSAGE_ONE_LINE":              1,
	"ERROR_MESSAGE_MULTI_LINE_WITH_CARET": 2,
}

func (x ErrorMessageMode) Enum() *ErrorMessageMode {
	p := new(ErrorMessageMode)
	*p = x
	return p
}

func (x ErrorMessageMode) String() string {
	return proto.EnumName(ErrorMessageMode_name, int32(x))
}

func (x *ErrorMessageMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorMessageMode_value, data, "ErrorMessageMode")
	if err != nil {
		return err
	}
	*x = ErrorMessageMode(value)
	return nil
}

func (ErrorMessageMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{6}
}

type ParameterMode int32

const (
	ParameterMode_PARAMETER_NAMED      ParameterMode = 0
	ParameterMode_PARAMETER_POSITIONAL ParameterMode = 1
	ParameterMode_PARAMETER_NONE       ParameterMode = 2
)

var ParameterMode_name = map[int32]string{
	0: "PARAMETER_NAMED",
	1: "PARAMETER_POSITIONAL",
	2: "PARAMETER_NONE",
}

var ParameterMode_value = map[string]int32{
	"PARAMETER_NAMED":      0,
	"PARAMETER_POSITIONAL": 1,
	"PARAMETER_NONE":       2,
}

func (x ParameterMode) Enum() *ParameterMode {
	p := new(ParameterMode)
	*p = x
	return p
}

func (x ParameterMode) String() string {
	return proto.EnumName(ParameterMode_name, int32(x))
}

func (x *ParameterMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ParameterMode_value, data, "ParameterMode")
	if err != nil {
		return err
	}
	*x = ParameterMode(value)
	return nil
}

func (ParameterMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{7}
}

type LanguageFeatureOptions struct {
	IdeallyEnabled       *bool    `protobuf:"varint,1,opt,name=ideally_enabled,json=ideallyEnabled,def=1" json:"ideally_enabled,omitempty"`
	InDevelopment        *bool    `protobuf:"varint,2,opt,name=in_development,json=inDevelopment,def=0" json:"in_development,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LanguageFeatureOptions) Reset()         { *m = LanguageFeatureOptions{} }
func (m *LanguageFeatureOptions) String() string { return proto.CompactTextString(m) }
func (*LanguageFeatureOptions) ProtoMessage()    {}
func (*LanguageFeatureOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{0}
}

func (m *LanguageFeatureOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LanguageFeatureOptions.Unmarshal(m, b)
}
func (m *LanguageFeatureOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LanguageFeatureOptions.Marshal(b, m, deterministic)
}
func (m *LanguageFeatureOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LanguageFeatureOptions.Merge(m, src)
}
func (m *LanguageFeatureOptions) XXX_Size() int {
	return xxx_messageInfo_LanguageFeatureOptions.Size(m)
}
func (m *LanguageFeatureOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_LanguageFeatureOptions.DiscardUnknown(m)
}

var xxx_messageInfo_LanguageFeatureOptions proto.InternalMessageInfo

const Default_LanguageFeatureOptions_IdeallyEnabled bool = true
const Default_LanguageFeatureOptions_InDevelopment bool = false

func (m *LanguageFeatureOptions) GetIdeallyEnabled() bool {
	if m != nil && m.IdeallyEnabled != nil {
		return *m.IdeallyEnabled
	}
	return Default_LanguageFeatureOptions_IdeallyEnabled
}

func (m *LanguageFeatureOptions) GetInDevelopment() bool {
	if m != nil && m.InDevelopment != nil {
		return *m.InDevelopment
	}
	return Default_LanguageFeatureOptions_InDevelopment
}

type ResolvedASTRewriteOptions struct {
	DefaultEnabled       *bool    `protobuf:"varint,1,opt,name=default_enabled,json=defaultEnabled" json:"default_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolvedASTRewriteOptions) Reset()         { *m = ResolvedASTRewriteOptions{} }
func (m *ResolvedASTRewriteOptions) String() string { return proto.CompactTextString(m) }
func (*ResolvedASTRewriteOptions) ProtoMessage()    {}
func (*ResolvedASTRewriteOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_61302f5f7ae8ff85, []int{1}
}

func (m *ResolvedASTRewriteOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolvedASTRewriteOptions.Unmarshal(m, b)
}
func (m *ResolvedASTRewriteOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolvedASTRewriteOptions.Marshal(b, m, deterministic)
}
func (m *ResolvedASTRewriteOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolvedASTRewriteOptions.Merge(m, src)
}
func (m *ResolvedASTRewriteOptions) XXX_Size() int {
	return xxx_messageInfo_ResolvedASTRewriteOptions.Size(m)
}
func (m *ResolvedASTRewriteOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolvedASTRewriteOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ResolvedASTRewriteOptions proto.InternalMessageInfo

func (m *ResolvedASTRewriteOptions) GetDefaultEnabled() bool {
	if m != nil && m.DefaultEnabled != nil {
		return *m.DefaultEnabled
	}
	return false
}

var E_LanguageFeatureOptions = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*LanguageFeatureOptions)(nil),
	Field:         170219291,
	Name:          "zetasql.language_feature_options",
	Tag:           "bytes,170219291,opt,name=language_feature_options",
	Filename:      "zetasql/public/options.proto",
}

var E_RewriteOptions = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*ResolvedASTRewriteOptions)(nil),
	Field:         336783472,
	Name:          "zetasql.rewrite_options",
	Tag:           "bytes,336783472,opt,name=rewrite_options",
	Filename:      "zetasql/public/options.proto",
}

func init() {
	proto.RegisterEnum("zetasql.LanguageVersion", LanguageVersion_name, LanguageVersion_value)
	proto.RegisterEnum("zetasql.LanguageFeature", LanguageFeature_name, LanguageFeature_value)
	proto.RegisterEnum("zetasql.ResolvedASTRewrite", ResolvedASTRewrite_name, ResolvedASTRewrite_value)
	proto.RegisterEnum("zetasql.NameResolutionMode", NameResolutionMode_name, NameResolutionMode_value)
	proto.RegisterEnum("zetasql.ProductMode", ProductMode_name, ProductMode_value)
	proto.RegisterEnum("zetasql.StatementContext", StatementContext_name, StatementContext_value)
	proto.RegisterEnum("zetasql.ErrorMessageMode", ErrorMessageMode_name, ErrorMessageMode_value)
	proto.RegisterEnum("zetasql.ParameterMode", ParameterMode_name, ParameterMode_value)
	proto.RegisterType((*LanguageFeatureOptions)(nil), "zetasql.LanguageFeatureOptions")
	proto.RegisterType((*ResolvedASTRewriteOptions)(nil), "zetasql.ResolvedASTRewriteOptions")
	proto.RegisterExtension(E_LanguageFeatureOptions)
	proto.RegisterExtension(E_RewriteOptions)
}

func init() { proto.RegisterFile("zetasql/public/options.proto", fileDescriptor_61302f5f7ae8ff85) }

var fileDescriptor_61302f5f7ae8ff85 = []byte{
	// 2280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0x4b, 0x70, 0x1c, 0x47,
	0xf9, 0xd7, 0xfa, 0xef, 0xfc, 0x11, 0x1d, 0x22, 0x75, 0xda, 0x89, 0xa3, 0x28, 0x7e, 0xc8, 0xb2,
	0x1d, 0x3b, 0x1b, 0x4b, 0xb2, 0xad, 0x24, 0x55, 0x79, 0x15, 0xd5, 0x9a, 0xf9, 0x76, 0xd5, 0x49,
	0x4f, 0xf7, 0xb8, 0xbb, 0x67, 0xa5, 0x4d, 0x95, 0xaa, 0x6b, 0x63, 0xb5, 0x1d, 0x55, 0xad, 0xb4,
	0x66, 0xb5, 0x4a, 0x80, 0x0b, 0x10, 0x52, 0x45, 0x71, 0xe3, 0xc2, 0x89, 0x0b, 0x67, 0x8a, 0xe2,
	0x0a, 0xdc, 0x39, 0x00, 0xe1, 0x11, 0xde, 0x10, 0x08, 0x84, 0xf7, 0xeb, 0x02, 0x37, 0x1e, 0x81,
	0x50, 0x3d, 0x33, 0xbb, 0x33, 0xb3, 0x5a, 0x17, 0xc6, 0x07, 0xd7, 0xaa, 0xfb, 0xd7, 0xdf, 0xf7,
	0xf5, 0xf7, 0xfc, 0xf5, 0xa0, 0x13, 0x1f, 0x76, 0x83, 0xce, 0xfe, 0x07, 0xba, 0x2b, 0xb7, 0x0e,
	0x5e, 0xec, 0xee, 0x5c, 0x5f, 0xe9, 0xdd, 0x1a, 0xec, 0xf4, 0xf6, 0xf6, 0x97, 0x6f, 0xf5, 0x7b,
	0x83, 0x1e, 0x79, 0x4f, 0xbe, 0x3b, 0xbf, 0x70, 0xb3, 0xd7, 0xbb, 0xd9, 0x75, 0x2b, 0xe9, 0xf2,
	0x8b, 0x07, 0x37, 0x56, 0xb6, 0xdd, 0xfe, 0xf5, 0xfe, 0xce, 0xad, 0x41, 0xaf, 0x9f, 0x41, 0x17,
	0x0f, 0xd0, 0x71, 0xde, 0xd9, 0xbb, 0x79, 0xd0, 0xb9, 0xe9, 0x1a, 0xae, 0x33, 0x38, 0xe8, 0x3b,
	0x99, 0x89, 0x22, 0x4b, 0x68, 0x76, 0x67, 0xdb, 0x75, 0xba, 0xdd, 0x0f, 0x59, 0xb7, 0xd7, 0x79,
	0xb1, 0xeb, 0xb6, 0xe7, 0x6a, 0x0b, 0xb5, 0x8b, 0xd3, 0x4f, 0x1d, 0x1d, 0xf4, 0x0f, 0x9c, 0x9a,
	0xc9, 0x37, 0x21, 0xdb, 0x23, 0x97, 0xd0, 0xcc, 0xce, 0x9e, 0xdd, 0x76, 0x2f, 0xbb, 0x6e, 0xef,
	0xd6, 0xae, 0xdb, 0x1b, 0xcc, 0x1d, 0x49, 0xd1, 0x77, 0xdd, 0xe8, 0x74, 0xf7, 0x9d, 0xba, 0x67,
	0x67, 0x2f, 0x2c, 0xf6, 0x16, 0x43, 0xf4, 0xa0, 0x72, 0xfb, 0xbd, 0xee, 0xcb, 0x6e, 0x9b, 0x6a,
	0xa3, 0xdc, 0x2b, 0xfd, 0x9d, 0xc1, 0x48, 0xf3, 0x05, 0x34, 0xbb, 0xed, 0x6e, 0x74, 0x0e, 0xba,
	0x83, 0xaa, 0x66, 0x35, 0x93, 0x2f, 0xe7, 0x3a, 0xeb, 0x9f, 0xaf, 0xa1, 0xd9, 0xa1, 0xf5, 0x2d,
	0xd7, 0xdf, 0xdf, 0xe9, 0xed, 0x91, 0x63, 0x68, 0xb6, 0x05, 0x4a, 0x33, 0x29, 0x6c, 0x90, 0x28,
	0x05, 0xc2, 0xe0, 0x1a, 0xc1, 0xe8, 0xee, 0xe1, 0xe2, 0x15, 0x7b, 0x19, 0x7f, 0x4a, 0x54, 0x57,
	0xae, 0xe0, 0xbf, 0x25, 0xd5, 0x95, 0xab, 0xf8, 0xed, 0xad, 0xea, 0xca, 0x2a, 0xfe, 0xaa, 0x23,
	0xcf, 0xa0, 0x15, 0x6b, 0xc7, 0x34, 0x5a, 0xbb, 0xff, 0xca, 0xce, 0xe0, 0xfa, 0x4b, 0x76, 0xf7,
	0x60, 0x7f, 0x60, 0x5f, 0xea, 0xbc, 0xec, 0x6c, 0xc7, 0x0e, 0xed, 0xb7, 0xf8, 0xdd, 0xe1, 0xbf,
	0x5a, 0xfd, 0x2b, 0xa7, 0x0a, 0x73, 0x73, 0x67, 0x93, 0x53, 0x68, 0xbe, 0x01, 0xd4, 0x24, 0x0a,
	0x2c, 0x15, 0x94, 0xb7, 0x0d, 0x0b, 0x6c, 0x23, 0x11, 0x81, 0x61, 0x52, 0x68, 0x5c, 0x23, 0x0f,
	0xa0, 0x63, 0xc3, 0x7d, 0x43, 0xd7, 0x38, 0x68, 0x1a, 0xc5, 0x1c, 0xf0, 0x11, 0xb2, 0x84, 0x4e,
	0x0f, 0x37, 0x42, 0xa6, 0x29, 0xe7, 0x72, 0xc3, 0x36, 0x95, 0x4c, 0x62, 0xbb, 0xd6, 0xb6, 0x0d,
	0x2e, 0xa9, 0xc1, 0xff, 0x37, 0x3f, 0xfd, 0xe6, 0x5f, 0x3f, 0xf7, 0xc9, 0xbb, 0x8e, 0x4c, 0x4f,
	0x91, 0x87, 0xd0, 0x03, 0x23, 0x39, 0x2c, 0x02, 0x6d, 0x68, 0x14, 0x5b, 0x41, 0x85, 0xd4, 0xf8,
	0x2e, 0xb2, 0x80, 0x4e, 0x8c, 0x64, 0x45, 0xdc, 0x26, 0x71, 0x48, 0x0d, 0xd8, 0x0d, 0x66, 0xd6,
	0xed, 0x73, 0x92, 0x09, 0xfc, 0xff, 0x64, 0x11, 0x9d, 0xaa, 0x98, 0x61, 0x5b, 0x94, 0x27, 0x10,
	0x96, 0x4c, 0x9d, 0x26, 0xe7, 0xd1, 0x99, 0x21, 0x26, 0x50, 0xe0, 0x25, 0xd0, 0x66, 0x53, 0x41,
	0xd3, 0xff, 0x1a, 0xe2, 0xf0, 0x7b, 0xc9, 0x19, 0x74, 0x72, 0x0c, 0x96, 0x49, 0x1c, 0x41, 0x50,
	0xd9, 0xd8, 0xd1, 0x95, 0x94, 0xe4, 0x3c, 0x89, 0xf1, 0xfb, 0xca, 0x1e, 0x33, 0x10, 0xc5, 0xbc,
	0x2c, 0x5e, 0xe3, 0x7b, 0x26, 0x98, 0x91, 0xc9, 0x8f, 0xa9, 0x32, 0xcc, 0x83, 0xec, 0x5a, 0x1b,
	0xcf, 0x90, 0xb3, 0x85, 0xff, 0x2a, 0xb0, 0x80, 0x27, 0xda, 0x80, 0xf2, 0xa0, 0x59, 0x32, 0x87,
	0xee, 0x1b, 0x82, 0x44, 0x12, 0x81, 0x62, 0x81, 0x35, 0xed, 0x18, 0x30, 0xbe, 0xed, 0x2d, 0x84,
	0x34, 0x56, 0x24, 0x9c, 0xe3, 0x7b, 0x49, 0x1d, 0x3d, 0x3c, 0xf9, 0xa2, 0x0c, 0x78, 0x68, 0xa9,
	0x10, 0xd2, 0xd0, 0xcc, 0x68, 0x42, 0x96, 0x51, 0x7d, 0x22, 0x96, 0x6a, 0xab, 0x81, 0x43, 0x60,
	0x6c, 0x20, 0x79, 0x12, 0x09, 0xcb, 0x99, 0x36, 0xf8, 0x18, 0xb9, 0x8c, 0x16, 0x0f, 0x45, 0xdf,
	0xab, 0xb5, 0xb1, 0x62, 0x11, 0x55, 0x6d, 0xfb, 0x3c, 0xb4, 0x35, 0xbe, 0xaf, 0x94, 0x00, 0x57,
	0xd1, 0xb9, 0x43, 0x27, 0x4a, 0xe0, 0x3c, 0xe8, 0x1a, 0xdf, 0x5f, 0x3a, 0xb3, 0x8a, 0x56, 0x26,
	0x24, 0x9f, 0x6d, 0x28, 0x19, 0xdd, 0x2e, 0x0d, 0x8e, 0x93, 0xe3, 0x88, 0x0c, 0x0f, 0x81, 0x08,
	0x54, 0x3b, 0x4e, 0x83, 0xfa, 0x00, 0xb9, 0x1f, 0xdd, 0x3b, 0x0a, 0x2a, 0xc8, 0xa6, 0xa2, 0xf1,
	0x7a, 0x1b, 0x3f, 0x48, 0x2e, 0xa1, 0x8b, 0xc3, 0x65, 0x6d, 0x14, 0x35, 0xac, 0xc1, 0x20, 0xb4,
	0x0a, 0x34, 0xa8, 0x96, 0x64, 0xaa, 0x92, 0xf5, 0xf3, 0xe5, 0x80, 0x34, 0xa4, 0x02, 0xd6, 0x14,
	0xd9, 0x4d, 0x1f, 0x22, 0xf5, 0x22, 0x87, 0xd7, 0xc0, 0x6c, 0x00, 0x08, 0x9b, 0x30, 0x61, 0x9e,
	0x78, 0xcc, 0xa6, 0xff, 0xe3, 0x13, 0xc3, 0x7b, 0xe1, 0x1a, 0x39, 0x81, 0xe6, 0x46, 0xde, 0x5e,
	0x87, 0xe0, 0x79, 0x1b, 0x48, 0xe1, 0x95, 0x33, 0x61, 0xf0, 0x49, 0xf2, 0x70, 0xe1, 0xdb, 0x98,
	0x2a, 0x1a, 0x81, 0x01, 0xa5, 0x2d, 0x13, 0xb6, 0xa9, 0xa8, 0x30, 0x00, 0x59, 0x0c, 0x4e, 0x95,
	0xb3, 0x54, 0xd0, 0x08, 0x42, 0x4b, 0x55, 0x33, 0x89, 0x40, 0x18, 0x8d, 0x4f, 0x93, 0x2b, 0x68,
	0x69, 0x54, 0xd7, 0xa9, 0xaf, 0x39, 0x34, 0x69, 0xe0, 0xd3, 0x78, 0xc3, 0xd2, 0x20, 0x00, 0xad,
	0x6d, 0x2c, 0x39, 0x0b, 0xda, 0x56, 0xb7, 0x85, 0xa1, 0x9b, 0x78, 0xa1, 0x7c, 0x24, 0xcf, 0x81,
	0x88, 0x1a, 0x50, 0x8c, 0x72, 0xf6, 0x02, 0x84, 0xb6, 0xc5, 0x60, 0xa3, 0x9a, 0xc4, 0x67, 0xc8,
	0x0a, 0x7a, 0xf4, 0xbf, 0x1e, 0x29, 0x25, 0xf4, 0x22, 0x79, 0x12, 0x3d, 0x3e, 0x76, 0x00, 0x36,
	0x0d, 0x28, 0x41, 0x79, 0x1e, 0xd0, 0xb4, 0xe8, 0xb3, 0x9f, 0xc0, 0xc1, 0xdf, 0x26, 0xbb, 0xee,
	0xd9, 0x72, 0xc1, 0x24, 0x02, 0x44, 0x43, 0xaa, 0x00, 0xc2, 0x6a, 0xbe, 0x5d, 0x24, 0xe7, 0x0b,
	0x9f, 0xac, 0xb1, 0x66, 0xa5, 0x66, 0x1e, 0x29, 0x05, 0xe0, 0x1c, 0x3a, 0x3e, 0xca, 0x91, 0x4d,
	0x03, 0x22, 0x84, 0x30, 0x05, 0x69, 0x5c, 0x2f, 0xa1, 0x4e, 0x17, 0x19, 0xf3, 0x9c, 0x96, 0x22,
	0x13, 0xf3, 0x68, 0x09, 0x70, 0xb1, 0x68, 0x05, 0x29, 0x40, 0x48, 0x9f, 0x90, 0x2c, 0x4c, 0xcb,
	0x0a, 0x5f, 0x2a, 0x21, 0x2f, 0xa0, 0x07, 0x2b, 0xc8, 0x3c, 0x1a, 0x31, 0x55, 0x1a, 0xf0, 0x72,
	0x09, 0xb8, 0x86, 0x1e, 0xbb, 0x03, 0x07, 0x15, 0x61, 0xc8, 0xca, 0x52, 0xe3, 0x95, 0x92, 0x8c,
	0x27, 0x8b, 0xa8, 0x08, 0x69, 0x69, 0xd8, 0xa2, 0xc2, 0xbb, 0x6a, 0xe8, 0x8d, 0x88, 0x9a, 0x75,
	0xab, 0x59, 0x53, 0xa4, 0x10, 0x8d, 0x2f, 0x97, 0x8e, 0x9e, 0x45, 0xf7, 0x0f, 0x8f, 0x32, 0x61,
	0x40, 0xb5, 0xbc, 0x5e, 0x7f, 0xed, 0x2b, 0x15, 0xd0, 0xa8, 0x19, 0xb7, 0xfc, 0xf4, 0xb2, 0x52,
	0x85, 0x69, 0x80, 0xbd, 0x35, 0xbe, 0x1f, 0xe2, 0xbf, 0x27, 0x87, 0x41, 0xa9, 0xe1, 0x52, 0x58,
	0x9d, 0xac, 0x5d, 0x4b, 0x40, 0xb5, 0xf1, 0x3f, 0x12, 0xb2, 0x54, 0x14, 0x5f, 0x06, 0xca, 0x9b,
	0x8d, 0x36, 0x54, 0x59, 0xd8, 0x0c, 0x20, 0x36, 0x56, 0x41, 0xcc, 0x69, 0x00, 0xf8, 0x9f, 0x09,
	0xb9, 0x88, 0xce, 0xde, 0x46, 0x31, 0x13, 0x45, 0xb3, 0xc7, 0xef, 0x4c, 0x10, 0x1c, 0x50, 0x6d,
	0x6c, 0xc8, 0x1a, 0x0d, 0xf0, 0x23, 0xd9, 0x52, 0xa5, 0x68, 0x3b, 0x0f, 0xf9, 0xbf, 0x12, 0x72,
	0xa6, 0x28, 0xde, 0x0c, 0x9e, 0xed, 0xc3, 0xb5, 0x84, 0x72, 0x66, 0xda, 0xf8, 0xdf, 0x09, 0x39,
	0x8f, 0x16, 0xaa, 0x10, 0xce, 0x22, 0x66, 0xaa, 0x8a, 0xdf, 0x4d, 0xc8, 0xc3, 0x45, 0xf7, 0xcf,
	0x60, 0xeb, 0xb4, 0xc5, 0x44, 0xb3, 0x8a, 0xfb, 0x68, 0x8b, 0x3c, 0x8e, 0x2e, 0x57, 0x71, 0x69,
	0xf7, 0x5c, 0xa7, 0x22, 0xe4, 0x1e, 0x1e, 0xc9, 0xd0, 0x37, 0x22, 0x95, 0x9e, 0xcb, 0xe7, 0x32,
	0xfe, 0x58, 0x8b, 0x3c, 0x81, 0xae, 0xdc, 0xf1, 0xb1, 0x91, 0xba, 0x57, 0x5b, 0x87, 0x3d, 0xd7,
	0x90, 0xca, 0xea, 0xb6, 0x36, 0x10, 0xa5, 0xf3, 0xd8, 0x37, 0x7a, 0xd9, 0xc0, 0x1f, 0x6f, 0x91,
	0x93, 0x45, 0x6f, 0xf2, 0xc8, 0xab, 0x36, 0x60, 0x2d, 0xc6, 0x53, 0x10, 0xfe, 0xe5, 0xd6, 0xb8,
	0x1b, 0xae, 0x5a, 0x4d, 0x1b, 0xc5, 0xfc, 0xb3, 0x01, 0xe5, 0x1c, 0xff, 0x6a, 0x8b, 0x2c, 0x16,
	0xe3, 0x29, 0x83, 0x8d, 0xe6, 0xa8, 0x36, 0x2a, 0x09, 0x0c, 0xfe, 0xf5, 0x16, 0xb9, 0x84, 0x2e,
	0x54, 0x31, 0xb1, 0x92, 0x46, 0x66, 0x05, 0xe9, 0x49, 0x8f, 0xce, 0x52, 0x46, 0xc0, 0x06, 0xfe,
	0xcd, 0xd6, 0x78, 0x88, 0x4a, 0x12, 0xd3, 0x58, 0xe1, 0xdf, 0xde, 0xb1, 0x40, 0x0d, 0x06, 0xff,
	0x6e, 0x8b, 0x5c, 0x2e, 0xaa, 0x24, 0xbf, 0xa8, 0x54, 0x0a, 0x7c, 0xfa, 0xfa, 0xf6, 0xdf, 0x48,
	0x3b, 0xae, 0x00, 0xed, 0xff, 0x0c, 0x23, 0x8e, 0x7f, 0xbf, 0x45, 0xce, 0x15, 0x1d, 0x28, 0x3b,
	0xb1, 0x01, 0xf0, 0x7c, 0x26, 0xd3, 0xff, 0x0a, 0x69, 0x1b, 0xff, 0x61, 0x8b, 0xd4, 0xd1, 0xf9,
	0x2a, 0x2a, 0xcf, 0xa5, 0xac, 0x9b, 0x95, 0x6c, 0xf8, 0xe3, 0x16, 0x59, 0x45, 0xcb, 0x55, 0x6c,
	0xae, 0x30, 0x67, 0x40, 0x21, 0x70, 0x18, 0x12, 0x21, 0xd9, 0x68, 0xf8, 0x43, 0x7f, 0x9a, 0x60,
	0x46, 0x13, 0x04, 0xa8, 0xd4, 0xee, 0x61, 0x37, 0xf8, 0xf3, 0xd6, 0x78, 0xc4, 0x57, 0x73, 0x67,
	0x84, 0xd0, 0xa0, 0x09, 0x37, 0x96, 0x35, 0x32, 0x9a, 0xf0, 0x35, 0x37, 0x1e, 0xd2, 0x55, 0xef,
	0x30, 0x45, 0x03, 0x93, 0xcd, 0xd9, 0xf4, 0x18, 0xfe, 0xba, 0x1b, 0xb7, 0x75, 0xb5, 0x3c, 0xc6,
	0xa5, 0x91, 0xab, 0x76, 0xdd, 0x93, 0x85, 0x80, 0x72, 0xaa, 0x32, 0x8a, 0x81, 0x5f, 0x77, 0xe3,
	0x51, 0x5b, 0xcd, 0x9d, 0x91, 0xd6, 0x2d, 0x13, 0x4d, 0xfc, 0x0d, 0x37, 0xee, 0xaf, 0x55, 0x2b,
	0xb3, 0xba, 0xd2, 0xa0, 0xaa, 0xac, 0xe3, 0x9b, 0x6e, 0xbc, 0xac, 0x57, 0x2d, 0x6b, 0x0a, 0xe9,
	0xe7, 0x64, 0x66, 0x41, 0xa2, 0x61, 0x78, 0x41, 0x8d, 0xbf, 0xe5, 0xc8, 0xa3, 0xe3, 0xda, 0xf3,
	0x5e, 0x92, 0xd9, 0xa7, 0xf1, 0xb7, 0x5d, 0xa9, 0xab, 0xad, 0x14, 0x14, 0x28, 0x03, 0x7b, 0xff,
	0x68, 0xdb, 0x60, 0x4a, 0x1b, 0xcb, 0x7d, 0xfb, 0x60, 0x62, 0xd4, 0x70, 0xf0, 0x1b, 0x13, 0x8c,
	0xc9, 0xbc, 0x11, 0x52, 0xbd, 0x0e, 0x69, 0xf6, 0xe4, 0x8c, 0x8c, 0x46, 0x80, 0xbf, 0xe3, 0xc8,
	0xca, 0xb8, 0x9b, 0x03, 0x29, 0x02, 0x6a, 0x6c, 0xc4, 0x36, 0x47, 0xd3, 0xe7, 0xbb, 0xae, 0xc4,
	0x7e, 0x0e, 0x59, 0x9f, 0xe6, 0x81, 0x82, 0x20, 0x51, 0x9a, 0xb5, 0x00, 0x7f, 0xcf, 0x55, 0x06,
	0xcc, 0xdc, 0xa4, 0x70, 0x47, 0x34, 0xd6, 0xf8, 0xfb, 0x65, 0xe0, 0x32, 0x7a, 0x64, 0x2c, 0xda,
	0x22, 0x89, 0x32, 0x1e, 0x65, 0x43, 0xd0, 0x81, 0x62, 0xb1, 0x91, 0x2a, 0x0f, 0xfb, 0x0f, 0x1c,
	0x59, 0x40, 0x0f, 0x8d, 0x85, 0x1d, 0x02, 0x16, 0x51, 0x6e, 0x29, 0x67, 0x54, 0xe3, 0x1f, 0xba,
	0xf1, 0xb2, 0x5b, 0xb5, 0x89, 0xf0, 0x69, 0x6c, 0xa9, 0x08, 0x6d, 0x83, 0x53, 0x63, 0x40, 0x64,
	0x61, 0xd7, 0xf8, 0x47, 0x8e, 0x5c, 0x28, 0xd8, 0x4d, 0xd9, 0x6b, 0x9e, 0x01, 0x41, 0x90, 0x18,
	0xd6, 0x02, 0x2b, 0x05, 0xfe, 0xb1, 0x23, 0x4f, 0xa3, 0x4b, 0x93, 0x80, 0x0a, 0x9a, 0xb0, 0x19,
	0x8f, 0x72, 0x54, 0xa6, 0xf4, 0x8e, 0x72, 0x8d, 0x7f, 0x52, 0xbe, 0xe5, 0x23, 0x05, 0xdb, 0xcc,
	0xad, 0x4e, 0x39, 0xad, 0xef, 0x74, 0x19, 0xd7, 0x4a, 0x02, 0x23, 0x95, 0xc6, 0x6f, 0xba, 0xf1,
	0x41, 0x95, 0x43, 0xa9, 0x62, 0x66, 0x3d, 0x02, 0xc3, 0x02, 0x8d, 0x7f, 0xea, 0x0e, 0x7b, 0x8d,
	0x86, 0x21, 0xcb, 0x34, 0xfb, 0x8e, 0xe6, 0x7b, 0x6f, 0xc1, 0x41, 0x7f, 0xe6, 0xc6, 0xfb, 0x5f,
	0x1e, 0xbb, 0xac, 0x65, 0x29, 0xb9, 0xa1, 0xf1, 0x5b, 0x6e, 0xbc, 0x01, 0xad, 0x16, 0x54, 0xa4,
	0x30, 0xb6, 0x34, 0xa6, 0x7f, 0x3e, 0x21, 0xe3, 0x46, 0x27, 0x46, 0x8c, 0x36, 0xa3, 0x14, 0x4a,
	0xe3, 0x5f, 0xb8, 0xc3, 0x4e, 0x60, 0x82, 0x33, 0x01, 0x96, 0xd3, 0x68, 0x2d, 0xa4, 0x23, 0xba,
	0x88, 0xdf, 0xf6, 0x31, 0x3c, 0x51, 0x10, 0xa2, 0x18, 0x14, 0xf3, 0x1b, 0x94, 0xfb, 0x81, 0x92,
	0x70, 0xd0, 0xf8, 0xcd, 0x77, 0x9e, 0x29, 0x79, 0xf7, 0xfd, 0x25, 0x5e, 0xee, 0x23, 0xcd, 0x42,
	0xa0, 0x9c, 0xb7, 0x2d, 0x08, 0x9f, 0xf1, 0xa1, 0x5d, 0x4b, 0xd2, 0x62, 0x09, 0xa1, 0x05, 0x5c,
	0xc6, 0xa9, 0x8e, 0x2f, 0xbe, 0xf6, 0x6c, 0x49, 0xc0, 0x52, 0xe1, 0x9e, 0x8a, 0x00, 0xdf, 0x52,
	0xbc, 0x04, 0xfc, 0xa5, 0x02, 0x3e, 0x3d, 0x45, 0xd6, 0x8a, 0x61, 0x39, 0x11, 0x9e, 0xa6, 0xda,
	0x98, 0xc2, 0x2f, 0xbf, 0xf6, 0xec, 0x3c, 0x4a, 0x25, 0x1c, 0x9d, 0x9e, 0xc2, 0xb5, 0xea, 0xd3,
	0x39, 0x7f, 0xfd, 0xde, 0xf1, 0xd3, 0x79, 0xf1, 0xe8, 0xf4, 0x39, 0x7c, 0x61, 0xf1, 0xe8, 0xf4,
	0x12, 0x5e, 0xaa, 0x6b, 0x44, 0x0e, 0x7f, 0x3b, 0xf0, 0xcf, 0x42, 0x05, 0x1b, 0x8a, 0x19, 0xcf,
	0x9c, 0x52, 0x16, 0x68, 0x43, 0x99, 0x3e, 0xc7, 0x12, 0x0d, 0x78, 0x8a, 0x9c, 0x44, 0xb3, 0xc3,
	0xfd, 0xbc, 0x28, 0x70, 0x6d, 0x7e, 0xfa, 0xd5, 0x4f, 0xbc, 0xf5, 0x1a, 0x3a, 0x32, 0x5d, 0xab,
	0x47, 0x88, 0x88, 0xce, 0xae, 0x4b, 0x05, 0x1f, 0x0c, 0x76, 0x7a, 0x7b, 0x51, 0x6f, 0xdb, 0x79,
	0x8a, 0xef, 0xdb, 0x87, 0x7f, 0x8e, 0x48, 0x9e, 0xa4, 0x13, 0x36, 0xef, 0x6f, 0x78, 0x8a, 0xcc,
	0xa3, 0xe3, 0xe3, 0x9b, 0x3e, 0x15, 0x03, 0x83, 0x6b, 0xf5, 0x27, 0xd1, 0xdd, 0x71, 0xbf, 0xb7,
	0x7d, 0x70, 0x7d, 0x90, 0xca, 0xb9, 0x0f, 0xe1, 0x58, 0xc9, 0x30, 0x09, 0x4c, 0x46, 0xeb, 0x04,
	0xe5, 0x78, 0xaa, 0xbc, 0x3a, 0x24, 0x99, 0xb8, 0x56, 0x7f, 0x1a, 0x61, 0x3d, 0xe8, 0x0c, 0xdc,
	0xae, 0xdb, 0x1b, 0x04, 0xbd, 0xbd, 0x81, 0xfb, 0xe0, 0x80, 0x1c, 0x43, 0xb3, 0x81, 0x14, 0x06,
	0x36, 0x4d, 0x49, 0x3f, 0x41, 0x33, 0xc3, 0xc5, 0x2c, 0x4d, 0x70, 0xad, 0xfe, 0x0a, 0xc2, 0xd0,
	0xef, 0xf7, 0xfa, 0x91, 0xdb, 0xdf, 0xef, 0xdc, 0x74, 0xa9, 0xf2, 0x53, 0x68, 0x1e, 0x94, 0x92,
	0xca, 0x46, 0xa0, 0x35, 0x6d, 0x8e, 0x28, 0x6c, 0x9b, 0x4b, 0x1a, 0x66, 0xf7, 0xa8, 0xee, 0x4b,
	0x9f, 0xa3, 0x4c, 0x40, 0xda, 0xd6, 0xce, 0x56, 0xf7, 0xa2, 0x84, 0x1b, 0x96, 0xee, 0x66, 0x62,
	0x02, 0xaa, 0xc0, 0xe0, 0x23, 0x75, 0x85, 0xee, 0x89, 0x3b, 0xfd, 0xce, 0xae, 0x1b, 0xb8, 0x7e,
	0xaa, 0xf5, 0x18, 0x9a, 0x1d, 0xbd, 0x9e, 0xb2, 0xf7, 0x11, 0x9e, 0xf2, 0xcf, 0xb7, 0x62, 0x31,
	0x96, 0x3a, 0x2f, 0x61, 0x5c, 0xf3, 0x97, 0x29, 0xc1, 0xa5, 0x00, 0x7c, 0xe4, 0xa9, 0x8f, 0xa0,
	0xb9, 0x6e, 0x9e, 0x30, 0xf6, 0x46, 0x9e, 0x31, 0xf9, 0x87, 0x2e, 0x72, 0x66, 0x39, 0xfb, 0xb4,
	0xb5, 0x3c, 0xfc, 0xb4, 0xb5, 0x0c, 0x7b, 0x07, 0xbb, 0xad, 0x4e, 0xf7, 0x60, 0xf8, 0x19, 0x69,
	0xee, 0x33, 0x5f, 0xf8, 0xf4, 0xb5, 0x85, 0xda, 0xc5, 0xbb, 0xaf, 0x9e, 0x5e, 0xce, 0xbf, 0x87,
	0x2d, 0x4f, 0xfe, 0xd4, 0xa5, 0x8e, 0x77, 0x27, 0xae, 0x3f, 0xd5, 0x47, 0xb3, 0xfd, 0x2c, 0xbd,
	0xfe, 0x17, 0xbd, 0x7f, 0x79, 0xe3, 0xf5, 0xcf, 0xd6, 0x52, 0xc5, 0x8b, 0x23, 0xc5, 0xb7, 0xfd,
	0xd8, 0xa5, 0x66, 0xfa, 0x95, 0xbf, 0xd7, 0xce, 0x21, 0x72, 0xbd, 0xb7, 0x3b, 0xd4, 0x92, 0x9f,
	0x5f, 0x9b, 0x79, 0xc1, 0x0d, 0x3a, 0xfa, 0x1a, 0xcf, 0x51, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff,
	0x5f, 0x68, 0x42, 0x5e, 0x00, 0x14, 0x00, 0x00,
}
